// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: variable.proto

#include "variable.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace BERTBuffers {
class ComplexDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Complex>
      _instance;
} _Complex_default_instance_;
class ArrayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Array>
      _instance;
} _Array_default_instance_;
class ErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Error>
      _instance;
} _Error_default_instance_;
class SheetReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SheetReference>
      _instance;
} _SheetReference_default_instance_;
class VariableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Variable>
      _instance;
  bool nil_;
  bool missing_;
  const ::BERTBuffers::Error* err_;
  ::google::protobuf::int32 integer_;
  double real_;
  ::google::protobuf::internal::ArenaStringPtr str_;
  bool boolean_;
  const ::BERTBuffers::Complex* cpx_;
  const ::BERTBuffers::Array* arr_;
  const ::BERTBuffers::SheetReference* ref_;
  const ::BERTBuffers::ExternalPointer* com_pointer_;
  const ::BERTBuffers::GraphicsUpdate* graphics_;
  ::google::protobuf::uint32 cache_reference_;
} _Variable_default_instance_;
class CodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Code>
      _instance;
} _Code_default_instance_;
class CompositeFunctionCallDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompositeFunctionCall>
      _instance;
} _CompositeFunctionCall_default_instance_;
class GraphicsUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GraphicsUpdate>
      _instance;
} _GraphicsUpdate_default_instance_;
class GraphicsCommandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GraphicsCommand>
      _instance;
} _GraphicsCommand_default_instance_;
class ColorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Color>
      _instance;
} _Color_default_instance_;
class GraphicsContextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GraphicsContext>
      _instance;
} _GraphicsContext_default_instance_;
class MIMEDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MIMEData>
      _instance;
} _MIMEData_default_instance_;
class ConsoleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Console>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  ::google::protobuf::internal::ArenaStringPtr prompt_;
  const ::BERTBuffers::GraphicsCommand* graphics_;
  const ::BERTBuffers::MIMEData* mime_data_;
  const ::BERTBuffers::Variable* history_;
} _Console_default_instance_;
class FunctionElementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FunctionElement>
      _instance;
} _FunctionElement_default_instance_;
class FunctionDescriptorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FunctionDescriptor>
      _instance;
} _FunctionDescriptor_default_instance_;
class FunctionListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FunctionList>
      _instance;
} _FunctionList_default_instance_;
class EnumValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnumValue>
      _instance;
} _EnumValue_default_instance_;
class EnumTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnumType>
      _instance;
} _EnumType_default_instance_;
class ExternalPointerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExternalPointer>
      _instance;
} _ExternalPointer_default_instance_;
class CallResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CallResponse>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr err_;
  const ::BERTBuffers::Variable* result_;
  const ::BERTBuffers::Console* console_;
  const ::BERTBuffers::Code* code_;
  ::google::protobuf::internal::ArenaStringPtr shell_command_;
  const ::BERTBuffers::CompositeFunctionCall* function_call_;
  const ::BERTBuffers::FunctionList* function_list_;
  ::google::protobuf::uint32 user_command_;
} _CallResponse_default_instance_;
}  // namespace BERTBuffers
namespace protobuf_variable_2eproto {
void InitDefaultsComplexImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::BERTBuffers::_Complex_default_instance_;
    new (ptr) ::BERTBuffers::Complex();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BERTBuffers::Complex::InitAsDefaultInstance();
}

void InitDefaultsComplex() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComplexImpl);
}

void InitDefaultsArrayImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_variable_2eproto::InitDefaultsEnumType();
  protobuf_variable_2eproto::InitDefaultsError();
  protobuf_variable_2eproto::InitDefaultsComplex();
  protobuf_variable_2eproto::InitDefaultsSheetReference();
  protobuf_variable_2eproto::InitDefaultsGraphicsUpdate();
  {
    void* ptr = &::BERTBuffers::_Array_default_instance_;
    new (ptr) ::BERTBuffers::Array();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::BERTBuffers::_Variable_default_instance_;
    new (ptr) ::BERTBuffers::Variable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::BERTBuffers::_FunctionElement_default_instance_;
    new (ptr) ::BERTBuffers::FunctionElement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::BERTBuffers::_FunctionDescriptor_default_instance_;
    new (ptr) ::BERTBuffers::FunctionDescriptor();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::BERTBuffers::_ExternalPointer_default_instance_;
    new (ptr) ::BERTBuffers::ExternalPointer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BERTBuffers::Array::InitAsDefaultInstance();
  ::BERTBuffers::Variable::InitAsDefaultInstance();
  ::BERTBuffers::FunctionElement::InitAsDefaultInstance();
  ::BERTBuffers::FunctionDescriptor::InitAsDefaultInstance();
  ::BERTBuffers::ExternalPointer::InitAsDefaultInstance();
}

void InitDefaultsArray() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsArrayImpl);
}

void InitDefaultsErrorImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::BERTBuffers::_Error_default_instance_;
    new (ptr) ::BERTBuffers::Error();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BERTBuffers::Error::InitAsDefaultInstance();
}

void InitDefaultsError() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsErrorImpl);
}

void InitDefaultsSheetReferenceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::BERTBuffers::_SheetReference_default_instance_;
    new (ptr) ::BERTBuffers::SheetReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BERTBuffers::SheetReference::InitAsDefaultInstance();
}

void InitDefaultsSheetReference() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSheetReferenceImpl);
}

void InitDefaultsCodeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::BERTBuffers::_Code_default_instance_;
    new (ptr) ::BERTBuffers::Code();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BERTBuffers::Code::InitAsDefaultInstance();
}

void InitDefaultsCode() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCodeImpl);
}

void InitDefaultsCompositeFunctionCallImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_variable_2eproto::InitDefaultsArray();
  {
    void* ptr = &::BERTBuffers::_CompositeFunctionCall_default_instance_;
    new (ptr) ::BERTBuffers::CompositeFunctionCall();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BERTBuffers::CompositeFunctionCall::InitAsDefaultInstance();
}

void InitDefaultsCompositeFunctionCall() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCompositeFunctionCallImpl);
}

void InitDefaultsGraphicsUpdateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::BERTBuffers::_GraphicsUpdate_default_instance_;
    new (ptr) ::BERTBuffers::GraphicsUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BERTBuffers::GraphicsUpdate::InitAsDefaultInstance();
}

void InitDefaultsGraphicsUpdate() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGraphicsUpdateImpl);
}

void InitDefaultsGraphicsCommandImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_variable_2eproto::InitDefaultsGraphicsContext();
  {
    void* ptr = &::BERTBuffers::_GraphicsCommand_default_instance_;
    new (ptr) ::BERTBuffers::GraphicsCommand();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BERTBuffers::GraphicsCommand::InitAsDefaultInstance();
}

void InitDefaultsGraphicsCommand() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGraphicsCommandImpl);
}

void InitDefaultsColorImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::BERTBuffers::_Color_default_instance_;
    new (ptr) ::BERTBuffers::Color();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BERTBuffers::Color::InitAsDefaultInstance();
}

void InitDefaultsColor() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsColorImpl);
}

void InitDefaultsGraphicsContextImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_variable_2eproto::InitDefaultsColor();
  {
    void* ptr = &::BERTBuffers::_GraphicsContext_default_instance_;
    new (ptr) ::BERTBuffers::GraphicsContext();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BERTBuffers::GraphicsContext::InitAsDefaultInstance();
}

void InitDefaultsGraphicsContext() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGraphicsContextImpl);
}

void InitDefaultsMIMEDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::BERTBuffers::_MIMEData_default_instance_;
    new (ptr) ::BERTBuffers::MIMEData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BERTBuffers::MIMEData::InitAsDefaultInstance();
}

void InitDefaultsMIMEData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMIMEDataImpl);
}

void InitDefaultsConsoleImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_variable_2eproto::InitDefaultsGraphicsCommand();
  protobuf_variable_2eproto::InitDefaultsMIMEData();
  protobuf_variable_2eproto::InitDefaultsArray();
  {
    void* ptr = &::BERTBuffers::_Console_default_instance_;
    new (ptr) ::BERTBuffers::Console();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BERTBuffers::Console::InitAsDefaultInstance();
}

void InitDefaultsConsole() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsConsoleImpl);
}

void InitDefaultsFunctionListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_variable_2eproto::InitDefaultsArray();
  {
    void* ptr = &::BERTBuffers::_FunctionList_default_instance_;
    new (ptr) ::BERTBuffers::FunctionList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BERTBuffers::FunctionList::InitAsDefaultInstance();
}

void InitDefaultsFunctionList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFunctionListImpl);
}

void InitDefaultsEnumValueImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::BERTBuffers::_EnumValue_default_instance_;
    new (ptr) ::BERTBuffers::EnumValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BERTBuffers::EnumValue::InitAsDefaultInstance();
}

void InitDefaultsEnumValue() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEnumValueImpl);
}

void InitDefaultsEnumTypeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_variable_2eproto::InitDefaultsEnumValue();
  {
    void* ptr = &::BERTBuffers::_EnumType_default_instance_;
    new (ptr) ::BERTBuffers::EnumType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BERTBuffers::EnumType::InitAsDefaultInstance();
}

void InitDefaultsEnumType() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEnumTypeImpl);
}

void InitDefaultsCallResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_variable_2eproto::InitDefaultsArray();
  protobuf_variable_2eproto::InitDefaultsConsole();
  protobuf_variable_2eproto::InitDefaultsCode();
  protobuf_variable_2eproto::InitDefaultsCompositeFunctionCall();
  protobuf_variable_2eproto::InitDefaultsFunctionList();
  {
    void* ptr = &::BERTBuffers::_CallResponse_default_instance_;
    new (ptr) ::BERTBuffers::CallResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BERTBuffers::CallResponse::InitAsDefaultInstance();
}

void InitDefaultsCallResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCallResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[20];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Complex, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Complex, r_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Complex, i_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Array, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Array, rows_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Array, cols_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Array, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Array, rownames_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Array, colnames_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Error, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Error, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Error, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::SheetReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::SheetReference, start_row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::SheetReference, start_column_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::SheetReference, end_row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::SheetReference, end_column_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::SheetReference, sheet_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Variable, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Variable, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::BERTBuffers::VariableDefaultTypeInternal, nil_),
  offsetof(::BERTBuffers::VariableDefaultTypeInternal, missing_),
  offsetof(::BERTBuffers::VariableDefaultTypeInternal, err_),
  offsetof(::BERTBuffers::VariableDefaultTypeInternal, integer_),
  offsetof(::BERTBuffers::VariableDefaultTypeInternal, real_),
  offsetof(::BERTBuffers::VariableDefaultTypeInternal, str_),
  offsetof(::BERTBuffers::VariableDefaultTypeInternal, boolean_),
  offsetof(::BERTBuffers::VariableDefaultTypeInternal, cpx_),
  offsetof(::BERTBuffers::VariableDefaultTypeInternal, arr_),
  offsetof(::BERTBuffers::VariableDefaultTypeInternal, ref_),
  offsetof(::BERTBuffers::VariableDefaultTypeInternal, com_pointer_),
  offsetof(::BERTBuffers::VariableDefaultTypeInternal, graphics_),
  offsetof(::BERTBuffers::VariableDefaultTypeInternal, cache_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Variable, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Variable, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Code, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Code, line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Code, startup_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::CompositeFunctionCall, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::CompositeFunctionCall, function_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::CompositeFunctionCall, arguments_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::CompositeFunctionCall, pointer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::CompositeFunctionCall, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::CompositeFunctionCall, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::CompositeFunctionCall, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::CompositeFunctionCall, flags_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsUpdate, command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsUpdate, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsUpdate, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsUpdate, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsUpdate, height_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsCommand, command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsCommand, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsCommand, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsCommand, r_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsCommand, rot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsCommand, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsCommand, filled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsCommand, hadj_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsCommand, raster_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsCommand, interpolate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsCommand, device_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsCommand, context_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Color, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Color, a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Color, r_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Color, g_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Color, b_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsContext, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsContext, col_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsContext, fill_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsContext, gamma_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsContext, lwd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsContext, lty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsContext, lend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsContext, ljoin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsContext, lmitre_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsContext, cex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsContext, ps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsContext, lineheight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsContext, fontface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::GraphicsContext, fontfamily_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::MIMEData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::MIMEData, mime_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::MIMEData, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Console, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Console, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::BERTBuffers::ConsoleDefaultTypeInternal, text_),
  offsetof(::BERTBuffers::ConsoleDefaultTypeInternal, err_),
  offsetof(::BERTBuffers::ConsoleDefaultTypeInternal, prompt_),
  offsetof(::BERTBuffers::ConsoleDefaultTypeInternal, graphics_),
  offsetof(::BERTBuffers::ConsoleDefaultTypeInternal, mime_data_),
  offsetof(::BERTBuffers::ConsoleDefaultTypeInternal, history_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Console, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::FunctionElement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::FunctionElement, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::FunctionElement, type_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::FunctionElement, default_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::FunctionElement, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::FunctionElement, index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::FunctionDescriptor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::FunctionDescriptor, function_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::FunctionDescriptor, call_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::FunctionDescriptor, flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::FunctionDescriptor, category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::FunctionDescriptor, arguments_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::FunctionList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::FunctionList, functions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::EnumValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::EnumValue, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::EnumValue, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::EnumType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::EnumType, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::EnumType, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::ExternalPointer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::ExternalPointer, interface_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::ExternalPointer, pointer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::ExternalPointer, functions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::ExternalPointer, enums_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::CallResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::CallResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::CallResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::CallResponse, wait_),
  offsetof(::BERTBuffers::CallResponseDefaultTypeInternal, err_),
  offsetof(::BERTBuffers::CallResponseDefaultTypeInternal, result_),
  offsetof(::BERTBuffers::CallResponseDefaultTypeInternal, console_),
  offsetof(::BERTBuffers::CallResponseDefaultTypeInternal, code_),
  offsetof(::BERTBuffers::CallResponseDefaultTypeInternal, shell_command_),
  offsetof(::BERTBuffers::CallResponseDefaultTypeInternal, function_call_),
  offsetof(::BERTBuffers::CallResponseDefaultTypeInternal, function_list_),
  offsetof(::BERTBuffers::CallResponseDefaultTypeInternal, user_command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::CallResponse, operation_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::BERTBuffers::Complex)},
  { 7, -1, sizeof(::BERTBuffers::Array)},
  { 17, -1, sizeof(::BERTBuffers::Error)},
  { 24, -1, sizeof(::BERTBuffers::SheetReference)},
  { 34, -1, sizeof(::BERTBuffers::Variable)},
  { 54, -1, sizeof(::BERTBuffers::Code)},
  { 61, -1, sizeof(::BERTBuffers::CompositeFunctionCall)},
  { 73, -1, sizeof(::BERTBuffers::GraphicsUpdate)},
  { 83, -1, sizeof(::BERTBuffers::GraphicsCommand)},
  { 100, -1, sizeof(::BERTBuffers::Color)},
  { 109, -1, sizeof(::BERTBuffers::GraphicsContext)},
  { 127, -1, sizeof(::BERTBuffers::MIMEData)},
  { 134, -1, sizeof(::BERTBuffers::Console)},
  { 146, -1, sizeof(::BERTBuffers::FunctionElement)},
  { 156, -1, sizeof(::BERTBuffers::FunctionDescriptor)},
  { 166, -1, sizeof(::BERTBuffers::FunctionList)},
  { 172, -1, sizeof(::BERTBuffers::EnumValue)},
  { 179, -1, sizeof(::BERTBuffers::EnumType)},
  { 186, -1, sizeof(::BERTBuffers::ExternalPointer)},
  { 195, -1, sizeof(::BERTBuffers::CallResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_Complex_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_Array_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_Error_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_SheetReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_Variable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_Code_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_CompositeFunctionCall_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_GraphicsUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_GraphicsCommand_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_Color_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_GraphicsContext_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_MIMEData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_Console_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_FunctionElement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_FunctionDescriptor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_FunctionList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_EnumValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_EnumType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_ExternalPointer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_CallResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "variable.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 20);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016variable.proto\022\013BERTBuffers\"\037\n\007Complex"
      "\022\t\n\001r\030\001 \001(\001\022\t\n\001i\030\002 \001(\001\"l\n\005Array\022\014\n\004rows\030"
      "\001 \001(\005\022\014\n\004cols\030\002 \001(\005\022#\n\004data\030\003 \003(\0132\025.BERT"
      "Buffers.Variable\022\020\n\010rownames\030\004 \003(\t\022\020\n\010co"
      "lnames\030\005 \003(\t\">\n\005Error\022$\n\004type\030\001 \001(\0162\026.BE"
      "RTBuffers.ErrorType\022\017\n\007message\030\002 \001(\t\"p\n\016"
      "SheetReference\022\021\n\tstart_row\030\001 \001(\r\022\024\n\014sta"
      "rt_column\030\002 \001(\r\022\017\n\007end_row\030\003 \001(\r\022\022\n\nend_"
      "column\030\004 \001(\r\022\020\n\010sheet_id\030\005 \001(\004\"\240\003\n\010Varia"
      "ble\022\r\n\003nil\030\001 \001(\010H\000\022\021\n\007missing\030\002 \001(\010H\000\022!\n"
      "\003err\030\003 \001(\0132\022.BERTBuffers.ErrorH\000\022\021\n\007inte"
      "ger\030\005 \001(\005H\000\022\016\n\004real\030\006 \001(\001H\000\022\r\n\003str\030\007 \001(\t"
      "H\000\022\021\n\007boolean\030\010 \001(\010H\000\022#\n\003cpx\030\t \001(\0132\024.BER"
      "TBuffers.ComplexH\000\022!\n\003arr\030\n \001(\0132\022.BERTBu"
      "ffers.ArrayH\000\022*\n\003ref\030\013 \001(\0132\033.BERTBuffers"
      ".SheetReferenceH\000\0223\n\013com_pointer\030\014 \001(\0132\034"
      ".BERTBuffers.ExternalPointerH\000\022/\n\010graphi"
      "cs\030\r \001(\0132\033.BERTBuffers.GraphicsUpdateH\000\022"
      "\031\n\017cache_reference\030\016 \001(\rH\000\022\014\n\004name\030\017 \001(\t"
      "B\007\n\005value\"%\n\004Code\022\014\n\004line\030\001 \003(\t\022\017\n\007start"
      "up\030\002 \001(\010\"\320\001\n\025CompositeFunctionCall\022\020\n\010fu"
      "nction\030\001 \001(\t\022(\n\targuments\030\002 \003(\0132\025.BERTBu"
      "ffers.Variable\022\017\n\007pointer\030\003 \001(\004\022\r\n\005index"
      "\030\004 \001(\r\022#\n\004type\030\005 \001(\0162\025.BERTBuffers.CallT"
      "ype\022\'\n\006target\030\006 \001(\0162\027.BERTBuffers.CallTa"
      "rget\022\r\n\005flags\030\007 \001(\r\"\200\001\n\016GraphicsUpdate\0223"
      "\n\007command\030\001 \001(\0162\".BERTBuffers.GraphicsUp"
      "dateCommand\022\014\n\004name\030\002 \001(\t\022\014\n\004path\030\003 \001(\t\022"
      "\r\n\005width\030\004 \001(\r\022\016\n\006height\030\005 \001(\r\"\345\001\n\017Graph"
      "icsCommand\022\017\n\007command\030\001 \001(\t\022\t\n\001x\030\002 \003(\001\022\t"
      "\n\001y\030\003 \003(\001\022\t\n\001r\030\004 \001(\001\022\013\n\003rot\030\005 \001(\001\022\014\n\004tex"
      "t\030\006 \001(\t\022\016\n\006filled\030\007 \001(\010\022\014\n\004hadj\030\010 \001(\001\022\016\n"
      "\006raster\030\t \001(\014\022\023\n\013interpolate\030\n \001(\010\022\023\n\013de"
      "vice_type\030\016 \001(\t\022-\n\007context\030\017 \001(\0132\034.BERTB"
      "uffers.GraphicsContext\"3\n\005Color\022\t\n\001a\030\001 \001"
      "(\r\022\t\n\001r\030\002 \001(\r\022\t\n\001g\030\003 \001(\r\022\t\n\001b\030\004 \001(\r\"\375\001\n\017"
      "GraphicsContext\022\037\n\003col\030\001 \001(\0132\022.BERTBuffe"
      "rs.Color\022 \n\004fill\030\002 \001(\0132\022.BERTBuffers.Col"
      "or\022\r\n\005gamma\030\003 \001(\001\022\013\n\003lwd\030\004 \001(\001\022\013\n\003lty\030\005 "
      "\001(\005\022\014\n\004lend\030\006 \001(\005\022\r\n\005ljoin\030\007 \001(\005\022\016\n\006lmit"
      "re\030\010 \001(\001\022\013\n\003cex\030\t \001(\001\022\n\n\002ps\030\n \001(\001\022\022\n\nlin"
      "eheight\030\013 \001(\001\022\020\n\010fontface\030\014 \001(\005\022\022\n\nfontf"
      "amily\030\r \001(\t\"+\n\010MIMEData\022\021\n\tmime_type\030\001 \001"
      "(\t\022\014\n\004data\030\002 \001(\014\"\315\001\n\007Console\022\016\n\004text\030\001 \001"
      "(\tH\000\022\r\n\003err\030\002 \001(\tH\000\022\020\n\006prompt\030\003 \001(\tH\000\0220\n"
      "\010graphics\030\004 \001(\0132\034.BERTBuffers.GraphicsCo"
      "mmandH\000\022*\n\tmime_data\030\005 \001(\0132\025.BERTBuffers"
      ".MIMEDataH\000\022(\n\007history\030\006 \001(\0132\025.BERTBuffe"
      "rs.VariableH\000B\t\n\007message\"\204\001\n\017FunctionEle"
      "ment\022\014\n\004name\030\001 \001(\t\022\021\n\ttype_name\030\002 \001(\t\022,\n"
      "\rdefault_value\030\003 \001(\0132\025.BERTBuffers.Varia"
      "ble\022\023\n\013description\030\004 \001(\t\022\r\n\005index\030\005 \001(\r\""
      "\300\001\n\022FunctionDescriptor\022.\n\010function\030\001 \001(\013"
      "2\034.BERTBuffers.FunctionElement\022(\n\tcall_t"
      "ype\030\002 \001(\0162\025.BERTBuffers.CallType\022\r\n\005flag"
      "s\030\003 \001(\r\022\020\n\010category\030\004 \001(\t\022/\n\targuments\030\005"
      " \003(\0132\034.BERTBuffers.FunctionElement\"B\n\014Fu"
      "nctionList\0222\n\tfunctions\030\001 \003(\0132\037.BERTBuff"
      "ers.FunctionDescriptor\"(\n\tEnumValue\022\014\n\004n"
      "ame\030\001 \001(\t\022\r\n\005value\030\002 \001(\005\"@\n\010EnumType\022\014\n\004"
      "name\030\001 \001(\t\022&\n\006values\030\002 \003(\0132\026.BERTBuffers"
      ".EnumValue\"\224\001\n\017ExternalPointer\022\026\n\016interf"
      "ace_name\030\001 \001(\t\022\017\n\007pointer\030\002 \001(\004\0222\n\tfunct"
      "ions\030\003 \003(\0132\037.BERTBuffers.FunctionDescrip"
      "tor\022$\n\005enums\030\004 \003(\0132\025.BERTBuffers.EnumTyp"
      "e\"\333\002\n\014CallResponse\022\n\n\002id\030\001 \001(\r\022\014\n\004wait\030\002"
      " \001(\010\022\r\n\003err\030\003 \001(\tH\000\022\'\n\006result\030\004 \001(\0132\025.BE"
      "RTBuffers.VariableH\000\022\'\n\007console\030\005 \001(\0132\024."
      "BERTBuffers.ConsoleH\000\022!\n\004code\030\006 \001(\0132\021.BE"
      "RTBuffers.CodeH\000\022\027\n\rshell_command\030\007 \001(\tH"
      "\000\022;\n\rfunction_call\030\010 \001(\0132\".BERTBuffers.C"
      "ompositeFunctionCallH\000\0222\n\rfunction_list\030"
      "\t \001(\0132\031.BERTBuffers.FunctionListH\000\022\026\n\014us"
      "er_command\030\n \001(\rH\000B\013\n\toperation*N\n\tError"
      "Type\022\013\n\007GENERIC\020\000\022\006\n\002NA\020\001\022\007\n\003INF\020\002\022\t\n\005PA"
      "RSE\020\003\022\r\n\tEXECUTION\020\004\022\t\n\005OTHER\020\017*(\n\010CallT"
      "ype\022\n\n\006method\020\000\022\007\n\003get\020\001\022\007\n\003put\020\002*=\n\nCal"
      "lTarget\022\014\n\010language\020\000\022\007\n\003COM\020\001\022\n\n\006system"
      "\020\002\022\014\n\010graphics\020\003*3\n\025GraphicsUpdateComman"
      "d\022\n\n\006update\020\000\022\016\n\nquery_size\020\001B\002H\001b\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3201);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "variable.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_variable_2eproto
namespace BERTBuffers {
const ::google::protobuf::EnumDescriptor* ErrorType_descriptor() {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_variable_2eproto::file_level_enum_descriptors[0];
}
bool ErrorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 15:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CallType_descriptor() {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_variable_2eproto::file_level_enum_descriptors[1];
}
bool CallType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CallTarget_descriptor() {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_variable_2eproto::file_level_enum_descriptors[2];
}
bool CallTarget_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GraphicsUpdateCommand_descriptor() {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_variable_2eproto::file_level_enum_descriptors[3];
}
bool GraphicsUpdateCommand_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Complex::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Complex::kRFieldNumber;
const int Complex::kIFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Complex::Complex()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsComplex();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.Complex)
}
Complex::Complex(const Complex& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&r_, &from.r_,
    static_cast<size_t>(reinterpret_cast<char*>(&i_) -
    reinterpret_cast<char*>(&r_)) + sizeof(i_));
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.Complex)
}

void Complex::SharedCtor() {
  ::memset(&r_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&i_) -
      reinterpret_cast<char*>(&r_)) + sizeof(i_));
  _cached_size_ = 0;
}

Complex::~Complex() {
  // @@protoc_insertion_point(destructor:BERTBuffers.Complex)
  SharedDtor();
}

void Complex::SharedDtor() {
}

void Complex::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Complex::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Complex& Complex::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsComplex();
  return *internal_default_instance();
}

Complex* Complex::New(::google::protobuf::Arena* arena) const {
  Complex* n = new Complex;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Complex::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.Complex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&r_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&i_) -
      reinterpret_cast<char*>(&r_)) + sizeof(i_));
  _internal_metadata_.Clear();
}

bool Complex::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.Complex)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double r = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double i = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &i_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.Complex)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.Complex)
  return false;
#undef DO_
}

void Complex::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.Complex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double r = 1;
  if (this->r() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->r(), output);
  }

  // double i = 2;
  if (this->i() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->i(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.Complex)
}

::google::protobuf::uint8* Complex::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.Complex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double r = 1;
  if (this->r() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->r(), target);
  }

  // double i = 2;
  if (this->i() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->i(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.Complex)
  return target;
}

size_t Complex::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.Complex)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double r = 1;
  if (this->r() != 0) {
    total_size += 1 + 8;
  }

  // double i = 2;
  if (this->i() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Complex::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.Complex)
  GOOGLE_DCHECK_NE(&from, this);
  const Complex* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Complex>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.Complex)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.Complex)
    MergeFrom(*source);
  }
}

void Complex::MergeFrom(const Complex& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.Complex)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.r() != 0) {
    set_r(from.r());
  }
  if (from.i() != 0) {
    set_i(from.i());
  }
}

void Complex::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.Complex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Complex::CopyFrom(const Complex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.Complex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Complex::IsInitialized() const {
  return true;
}

void Complex::Swap(Complex* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Complex::InternalSwap(Complex* other) {
  using std::swap;
  swap(r_, other->r_);
  swap(i_, other->i_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Complex::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Array::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Array::kRowsFieldNumber;
const int Array::kColsFieldNumber;
const int Array::kDataFieldNumber;
const int Array::kRownamesFieldNumber;
const int Array::kColnamesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Array::Array()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsArray();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.Array)
}
Array::Array(const Array& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      data_(from.data_),
      rownames_(from.rownames_),
      colnames_(from.colnames_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rows_, &from.rows_,
    static_cast<size_t>(reinterpret_cast<char*>(&cols_) -
    reinterpret_cast<char*>(&rows_)) + sizeof(cols_));
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.Array)
}

void Array::SharedCtor() {
  ::memset(&rows_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cols_) -
      reinterpret_cast<char*>(&rows_)) + sizeof(cols_));
  _cached_size_ = 0;
}

Array::~Array() {
  // @@protoc_insertion_point(destructor:BERTBuffers.Array)
  SharedDtor();
}

void Array::SharedDtor() {
}

void Array::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Array::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Array& Array::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsArray();
  return *internal_default_instance();
}

Array* Array::New(::google::protobuf::Arena* arena) const {
  Array* n = new Array;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Array::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.Array)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  rownames_.Clear();
  colnames_.Clear();
  ::memset(&rows_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cols_) -
      reinterpret_cast<char*>(&rows_)) + sizeof(cols_));
  _internal_metadata_.Clear();
}

bool Array::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.Array)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rows = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rows_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cols = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cols_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .BERTBuffers.Variable data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string rownames = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_rownames()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rownames(this->rownames_size() - 1).data(),
            static_cast<int>(this->rownames(this->rownames_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.Array.rownames"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string colnames = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_colnames()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->colnames(this->colnames_size() - 1).data(),
            static_cast<int>(this->colnames(this->colnames_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.Array.colnames"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.Array)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.Array)
  return false;
#undef DO_
}

void Array::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.Array)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rows = 1;
  if (this->rows() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rows(), output);
  }

  // int32 cols = 2;
  if (this->cols() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cols(), output);
  }

  // repeated .BERTBuffers.Variable data = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data(static_cast<int>(i)), output);
  }

  // repeated string rownames = 4;
  for (int i = 0, n = this->rownames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rownames(i).data(), static_cast<int>(this->rownames(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Array.rownames");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->rownames(i), output);
  }

  // repeated string colnames = 5;
  for (int i = 0, n = this->colnames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->colnames(i).data(), static_cast<int>(this->colnames(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Array.colnames");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->colnames(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.Array)
}

::google::protobuf::uint8* Array::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.Array)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rows = 1;
  if (this->rows() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rows(), target);
  }

  // int32 cols = 2;
  if (this->cols() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cols(), target);
  }

  // repeated .BERTBuffers.Variable data = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->data(static_cast<int>(i)), deterministic, target);
  }

  // repeated string rownames = 4;
  for (int i = 0, n = this->rownames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rownames(i).data(), static_cast<int>(this->rownames(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Array.rownames");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->rownames(i), target);
  }

  // repeated string colnames = 5;
  for (int i = 0, n = this->colnames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->colnames(i).data(), static_cast<int>(this->colnames(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Array.colnames");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->colnames(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.Array)
  return target;
}

size_t Array::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.Array)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .BERTBuffers.Variable data = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->data(static_cast<int>(i)));
    }
  }

  // repeated string rownames = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->rownames_size());
  for (int i = 0, n = this->rownames_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->rownames(i));
  }

  // repeated string colnames = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->colnames_size());
  for (int i = 0, n = this->colnames_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->colnames(i));
  }

  // int32 rows = 1;
  if (this->rows() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rows());
  }

  // int32 cols = 2;
  if (this->cols() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cols());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Array::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.Array)
  GOOGLE_DCHECK_NE(&from, this);
  const Array* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Array>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.Array)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.Array)
    MergeFrom(*source);
  }
}

void Array::MergeFrom(const Array& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.Array)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  rownames_.MergeFrom(from.rownames_);
  colnames_.MergeFrom(from.colnames_);
  if (from.rows() != 0) {
    set_rows(from.rows());
  }
  if (from.cols() != 0) {
    set_cols(from.cols());
  }
}

void Array::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.Array)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Array::CopyFrom(const Array& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.Array)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Array::IsInitialized() const {
  return true;
}

void Array::Swap(Array* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Array::InternalSwap(Array* other) {
  using std::swap;
  data_.InternalSwap(&other->data_);
  rownames_.InternalSwap(&other->rownames_);
  colnames_.InternalSwap(&other->colnames_);
  swap(rows_, other->rows_);
  swap(cols_, other->cols_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Array::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Error::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Error::kTypeFieldNumber;
const int Error::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Error::Error()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsError();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.Error)
}
Error::Error(const Error& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.Error)
}

void Error::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

Error::~Error() {
  // @@protoc_insertion_point(destructor:BERTBuffers.Error)
  SharedDtor();
}

void Error::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Error::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Error::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Error& Error::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsError();
  return *internal_default_instance();
}

Error* Error::New(::google::protobuf::Arena* arena) const {
  Error* n = new Error;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Error::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool Error::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.Error)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .BERTBuffers.ErrorType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::BERTBuffers::ErrorType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.Error.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.Error)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.Error)
  return false;
#undef DO_
}

void Error::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BERTBuffers.ErrorType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Error.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.Error)
}

::google::protobuf::uint8* Error::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BERTBuffers.ErrorType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Error.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.Error)
  return target;
}

size_t Error::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.Error)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // .BERTBuffers.ErrorType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Error::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.Error)
  GOOGLE_DCHECK_NE(&from, this);
  const Error* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Error>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.Error)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.Error)
    MergeFrom(*source);
  }
}

void Error::MergeFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.Error)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Error::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Error::CopyFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Error::IsInitialized() const {
  return true;
}

void Error::Swap(Error* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Error::InternalSwap(Error* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Error::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SheetReference::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SheetReference::kStartRowFieldNumber;
const int SheetReference::kStartColumnFieldNumber;
const int SheetReference::kEndRowFieldNumber;
const int SheetReference::kEndColumnFieldNumber;
const int SheetReference::kSheetIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SheetReference::SheetReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsSheetReference();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.SheetReference)
}
SheetReference::SheetReference(const SheetReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_row_, &from.start_row_,
    static_cast<size_t>(reinterpret_cast<char*>(&sheet_id_) -
    reinterpret_cast<char*>(&start_row_)) + sizeof(sheet_id_));
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.SheetReference)
}

void SheetReference::SharedCtor() {
  ::memset(&start_row_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sheet_id_) -
      reinterpret_cast<char*>(&start_row_)) + sizeof(sheet_id_));
  _cached_size_ = 0;
}

SheetReference::~SheetReference() {
  // @@protoc_insertion_point(destructor:BERTBuffers.SheetReference)
  SharedDtor();
}

void SheetReference::SharedDtor() {
}

void SheetReference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SheetReference::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SheetReference& SheetReference::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsSheetReference();
  return *internal_default_instance();
}

SheetReference* SheetReference::New(::google::protobuf::Arena* arena) const {
  SheetReference* n = new SheetReference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SheetReference::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.SheetReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&start_row_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sheet_id_) -
      reinterpret_cast<char*>(&start_row_)) + sizeof(sheet_id_));
  _internal_metadata_.Clear();
}

bool SheetReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.SheetReference)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 start_row = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_row_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 start_column = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_column_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 end_row = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &end_row_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 end_column = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &end_column_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sheet_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sheet_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.SheetReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.SheetReference)
  return false;
#undef DO_
}

void SheetReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.SheetReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 start_row = 1;
  if (this->start_row() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->start_row(), output);
  }

  // uint32 start_column = 2;
  if (this->start_column() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->start_column(), output);
  }

  // uint32 end_row = 3;
  if (this->end_row() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->end_row(), output);
  }

  // uint32 end_column = 4;
  if (this->end_column() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->end_column(), output);
  }

  // uint64 sheet_id = 5;
  if (this->sheet_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->sheet_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.SheetReference)
}

::google::protobuf::uint8* SheetReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.SheetReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 start_row = 1;
  if (this->start_row() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->start_row(), target);
  }

  // uint32 start_column = 2;
  if (this->start_column() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->start_column(), target);
  }

  // uint32 end_row = 3;
  if (this->end_row() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->end_row(), target);
  }

  // uint32 end_column = 4;
  if (this->end_column() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->end_column(), target);
  }

  // uint64 sheet_id = 5;
  if (this->sheet_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->sheet_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.SheetReference)
  return target;
}

size_t SheetReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.SheetReference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 start_row = 1;
  if (this->start_row() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->start_row());
  }

  // uint32 start_column = 2;
  if (this->start_column() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->start_column());
  }

  // uint32 end_row = 3;
  if (this->end_row() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->end_row());
  }

  // uint32 end_column = 4;
  if (this->end_column() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->end_column());
  }

  // uint64 sheet_id = 5;
  if (this->sheet_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sheet_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SheetReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.SheetReference)
  GOOGLE_DCHECK_NE(&from, this);
  const SheetReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SheetReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.SheetReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.SheetReference)
    MergeFrom(*source);
  }
}

void SheetReference::MergeFrom(const SheetReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.SheetReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start_row() != 0) {
    set_start_row(from.start_row());
  }
  if (from.start_column() != 0) {
    set_start_column(from.start_column());
  }
  if (from.end_row() != 0) {
    set_end_row(from.end_row());
  }
  if (from.end_column() != 0) {
    set_end_column(from.end_column());
  }
  if (from.sheet_id() != 0) {
    set_sheet_id(from.sheet_id());
  }
}

void SheetReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.SheetReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SheetReference::CopyFrom(const SheetReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.SheetReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SheetReference::IsInitialized() const {
  return true;
}

void SheetReference::Swap(SheetReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SheetReference::InternalSwap(SheetReference* other) {
  using std::swap;
  swap(start_row_, other->start_row_);
  swap(start_column_, other->start_column_);
  swap(end_row_, other->end_row_);
  swap(end_column_, other->end_column_);
  swap(sheet_id_, other->sheet_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SheetReference::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Variable::InitAsDefaultInstance() {
  ::BERTBuffers::_Variable_default_instance_.nil_ = false;
  ::BERTBuffers::_Variable_default_instance_.missing_ = false;
  ::BERTBuffers::_Variable_default_instance_.err_ = const_cast< ::BERTBuffers::Error*>(
      ::BERTBuffers::Error::internal_default_instance());
  ::BERTBuffers::_Variable_default_instance_.integer_ = 0;
  ::BERTBuffers::_Variable_default_instance_.real_ = 0;
  ::BERTBuffers::_Variable_default_instance_.str_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::BERTBuffers::_Variable_default_instance_.boolean_ = false;
  ::BERTBuffers::_Variable_default_instance_.cpx_ = const_cast< ::BERTBuffers::Complex*>(
      ::BERTBuffers::Complex::internal_default_instance());
  ::BERTBuffers::_Variable_default_instance_.arr_ = const_cast< ::BERTBuffers::Array*>(
      ::BERTBuffers::Array::internal_default_instance());
  ::BERTBuffers::_Variable_default_instance_.ref_ = const_cast< ::BERTBuffers::SheetReference*>(
      ::BERTBuffers::SheetReference::internal_default_instance());
  ::BERTBuffers::_Variable_default_instance_.com_pointer_ = const_cast< ::BERTBuffers::ExternalPointer*>(
      ::BERTBuffers::ExternalPointer::internal_default_instance());
  ::BERTBuffers::_Variable_default_instance_.graphics_ = const_cast< ::BERTBuffers::GraphicsUpdate*>(
      ::BERTBuffers::GraphicsUpdate::internal_default_instance());
  ::BERTBuffers::_Variable_default_instance_.cache_reference_ = 0u;
}
void Variable::set_allocated_err(::BERTBuffers::Error* err) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (err) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      err = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, err, submessage_arena);
    }
    set_has_err();
    value_.err_ = err;
  }
  // @@protoc_insertion_point(field_set_allocated:BERTBuffers.Variable.err)
}
void Variable::set_allocated_cpx(::BERTBuffers::Complex* cpx) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (cpx) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cpx = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cpx, submessage_arena);
    }
    set_has_cpx();
    value_.cpx_ = cpx;
  }
  // @@protoc_insertion_point(field_set_allocated:BERTBuffers.Variable.cpx)
}
void Variable::set_allocated_arr(::BERTBuffers::Array* arr) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (arr) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      arr = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, arr, submessage_arena);
    }
    set_has_arr();
    value_.arr_ = arr;
  }
  // @@protoc_insertion_point(field_set_allocated:BERTBuffers.Variable.arr)
}
void Variable::set_allocated_ref(::BERTBuffers::SheetReference* ref) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (ref) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ref = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ref, submessage_arena);
    }
    set_has_ref();
    value_.ref_ = ref;
  }
  // @@protoc_insertion_point(field_set_allocated:BERTBuffers.Variable.ref)
}
void Variable::set_allocated_com_pointer(::BERTBuffers::ExternalPointer* com_pointer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (com_pointer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      com_pointer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, com_pointer, submessage_arena);
    }
    set_has_com_pointer();
    value_.com_pointer_ = com_pointer;
  }
  // @@protoc_insertion_point(field_set_allocated:BERTBuffers.Variable.com_pointer)
}
void Variable::set_allocated_graphics(::BERTBuffers::GraphicsUpdate* graphics) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (graphics) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      graphics = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, graphics, submessage_arena);
    }
    set_has_graphics();
    value_.graphics_ = graphics;
  }
  // @@protoc_insertion_point(field_set_allocated:BERTBuffers.Variable.graphics)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Variable::kNilFieldNumber;
const int Variable::kMissingFieldNumber;
const int Variable::kErrFieldNumber;
const int Variable::kIntegerFieldNumber;
const int Variable::kRealFieldNumber;
const int Variable::kStrFieldNumber;
const int Variable::kBooleanFieldNumber;
const int Variable::kCpxFieldNumber;
const int Variable::kArrFieldNumber;
const int Variable::kRefFieldNumber;
const int Variable::kComPointerFieldNumber;
const int Variable::kGraphicsFieldNumber;
const int Variable::kCacheReferenceFieldNumber;
const int Variable::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Variable::Variable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsArray();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.Variable)
}
Variable::Variable(const Variable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  clear_has_value();
  switch (from.value_case()) {
    case kNil: {
      set_nil(from.nil());
      break;
    }
    case kMissing: {
      set_missing(from.missing());
      break;
    }
    case kErr: {
      mutable_err()->::BERTBuffers::Error::MergeFrom(from.err());
      break;
    }
    case kInteger: {
      set_integer(from.integer());
      break;
    }
    case kReal: {
      set_real(from.real());
      break;
    }
    case kStr: {
      set_str(from.str());
      break;
    }
    case kBoolean: {
      set_boolean(from.boolean());
      break;
    }
    case kCpx: {
      mutable_cpx()->::BERTBuffers::Complex::MergeFrom(from.cpx());
      break;
    }
    case kArr: {
      mutable_arr()->::BERTBuffers::Array::MergeFrom(from.arr());
      break;
    }
    case kRef: {
      mutable_ref()->::BERTBuffers::SheetReference::MergeFrom(from.ref());
      break;
    }
    case kComPointer: {
      mutable_com_pointer()->::BERTBuffers::ExternalPointer::MergeFrom(from.com_pointer());
      break;
    }
    case kGraphics: {
      mutable_graphics()->::BERTBuffers::GraphicsUpdate::MergeFrom(from.graphics());
      break;
    }
    case kCacheReference: {
      set_cache_reference(from.cache_reference());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.Variable)
}

void Variable::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
  _cached_size_ = 0;
}

Variable::~Variable() {
  // @@protoc_insertion_point(destructor:BERTBuffers.Variable)
  SharedDtor();
}

void Variable::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_value()) {
    clear_value();
  }
}

void Variable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Variable::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Variable& Variable::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsArray();
  return *internal_default_instance();
}

Variable* Variable::New(::google::protobuf::Arena* arena) const {
  Variable* n = new Variable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Variable::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:BERTBuffers.Variable)
  switch (value_case()) {
    case kNil: {
      // No need to clear
      break;
    }
    case kMissing: {
      // No need to clear
      break;
    }
    case kErr: {
      delete value_.err_;
      break;
    }
    case kInteger: {
      // No need to clear
      break;
    }
    case kReal: {
      // No need to clear
      break;
    }
    case kStr: {
      value_.str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kBoolean: {
      // No need to clear
      break;
    }
    case kCpx: {
      delete value_.cpx_;
      break;
    }
    case kArr: {
      delete value_.arr_;
      break;
    }
    case kRef: {
      delete value_.ref_;
      break;
    }
    case kComPointer: {
      delete value_.com_pointer_;
      break;
    }
    case kGraphics: {
      delete value_.graphics_;
      break;
    }
    case kCacheReference: {
      // No need to clear
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void Variable::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.Variable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_value();
  _internal_metadata_.Clear();
}

bool Variable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.Variable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool nil = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_.nil_)));
          set_has_nil();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool missing = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_.missing_)));
          set_has_missing();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.Error err = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_err()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 integer = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_.integer_)));
          set_has_integer();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double real = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_.real_)));
          set_has_real();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string str = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str().data(), static_cast<int>(this->str().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.Variable.str"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool boolean = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_.boolean_)));
          set_has_boolean();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.Complex cpx = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cpx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.Array arr = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_arr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.SheetReference ref = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.ExternalPointer com_pointer = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_com_pointer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.GraphicsUpdate graphics = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_graphics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cache_reference = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_.cache_reference_)));
          set_has_cache_reference();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.Variable.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.Variable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.Variable)
  return false;
#undef DO_
}

void Variable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.Variable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool nil = 1;
  if (has_nil()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->nil(), output);
  }

  // bool missing = 2;
  if (has_missing()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->missing(), output);
  }

  // .BERTBuffers.Error err = 3;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *value_.err_, output);
  }

  // int32 integer = 5;
  if (has_integer()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->integer(), output);
  }

  // double real = 6;
  if (has_real()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->real(), output);
  }

  // string str = 7;
  if (has_str()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), static_cast<int>(this->str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Variable.str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->str(), output);
  }

  // bool boolean = 8;
  if (has_boolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->boolean(), output);
  }

  // .BERTBuffers.Complex cpx = 9;
  if (has_cpx()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *value_.cpx_, output);
  }

  // .BERTBuffers.Array arr = 10;
  if (has_arr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *value_.arr_, output);
  }

  // .BERTBuffers.SheetReference ref = 11;
  if (has_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *value_.ref_, output);
  }

  // .BERTBuffers.ExternalPointer com_pointer = 12;
  if (has_com_pointer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *value_.com_pointer_, output);
  }

  // .BERTBuffers.GraphicsUpdate graphics = 13;
  if (has_graphics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *value_.graphics_, output);
  }

  // uint32 cache_reference = 14;
  if (has_cache_reference()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->cache_reference(), output);
  }

  // string name = 15;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Variable.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.Variable)
}

::google::protobuf::uint8* Variable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.Variable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool nil = 1;
  if (has_nil()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->nil(), target);
  }

  // bool missing = 2;
  if (has_missing()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->missing(), target);
  }

  // .BERTBuffers.Error err = 3;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *value_.err_, deterministic, target);
  }

  // int32 integer = 5;
  if (has_integer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->integer(), target);
  }

  // double real = 6;
  if (has_real()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->real(), target);
  }

  // string str = 7;
  if (has_str()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), static_cast<int>(this->str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Variable.str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->str(), target);
  }

  // bool boolean = 8;
  if (has_boolean()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->boolean(), target);
  }

  // .BERTBuffers.Complex cpx = 9;
  if (has_cpx()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *value_.cpx_, deterministic, target);
  }

  // .BERTBuffers.Array arr = 10;
  if (has_arr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, *value_.arr_, deterministic, target);
  }

  // .BERTBuffers.SheetReference ref = 11;
  if (has_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, *value_.ref_, deterministic, target);
  }

  // .BERTBuffers.ExternalPointer com_pointer = 12;
  if (has_com_pointer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, *value_.com_pointer_, deterministic, target);
  }

  // .BERTBuffers.GraphicsUpdate graphics = 13;
  if (has_graphics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, *value_.graphics_, deterministic, target);
  }

  // uint32 cache_reference = 14;
  if (has_cache_reference()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->cache_reference(), target);
  }

  // string name = 15;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Variable.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.Variable)
  return target;
}

size_t Variable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.Variable)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 15;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  switch (value_case()) {
    // bool nil = 1;
    case kNil: {
      total_size += 1 + 1;
      break;
    }
    // bool missing = 2;
    case kMissing: {
      total_size += 1 + 1;
      break;
    }
    // .BERTBuffers.Error err = 3;
    case kErr: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.err_);
      break;
    }
    // int32 integer = 5;
    case kInteger: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->integer());
      break;
    }
    // double real = 6;
    case kReal: {
      total_size += 1 + 8;
      break;
    }
    // string str = 7;
    case kStr: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str());
      break;
    }
    // bool boolean = 8;
    case kBoolean: {
      total_size += 1 + 1;
      break;
    }
    // .BERTBuffers.Complex cpx = 9;
    case kCpx: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.cpx_);
      break;
    }
    // .BERTBuffers.Array arr = 10;
    case kArr: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.arr_);
      break;
    }
    // .BERTBuffers.SheetReference ref = 11;
    case kRef: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.ref_);
      break;
    }
    // .BERTBuffers.ExternalPointer com_pointer = 12;
    case kComPointer: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.com_pointer_);
      break;
    }
    // .BERTBuffers.GraphicsUpdate graphics = 13;
    case kGraphics: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.graphics_);
      break;
    }
    // uint32 cache_reference = 14;
    case kCacheReference: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cache_reference());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Variable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.Variable)
  GOOGLE_DCHECK_NE(&from, this);
  const Variable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Variable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.Variable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.Variable)
    MergeFrom(*source);
  }
}

void Variable::MergeFrom(const Variable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.Variable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  switch (from.value_case()) {
    case kNil: {
      set_nil(from.nil());
      break;
    }
    case kMissing: {
      set_missing(from.missing());
      break;
    }
    case kErr: {
      mutable_err()->::BERTBuffers::Error::MergeFrom(from.err());
      break;
    }
    case kInteger: {
      set_integer(from.integer());
      break;
    }
    case kReal: {
      set_real(from.real());
      break;
    }
    case kStr: {
      set_str(from.str());
      break;
    }
    case kBoolean: {
      set_boolean(from.boolean());
      break;
    }
    case kCpx: {
      mutable_cpx()->::BERTBuffers::Complex::MergeFrom(from.cpx());
      break;
    }
    case kArr: {
      mutable_arr()->::BERTBuffers::Array::MergeFrom(from.arr());
      break;
    }
    case kRef: {
      mutable_ref()->::BERTBuffers::SheetReference::MergeFrom(from.ref());
      break;
    }
    case kComPointer: {
      mutable_com_pointer()->::BERTBuffers::ExternalPointer::MergeFrom(from.com_pointer());
      break;
    }
    case kGraphics: {
      mutable_graphics()->::BERTBuffers::GraphicsUpdate::MergeFrom(from.graphics());
      break;
    }
    case kCacheReference: {
      set_cache_reference(from.cache_reference());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void Variable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.Variable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Variable::CopyFrom(const Variable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.Variable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Variable::IsInitialized() const {
  return true;
}

void Variable::Swap(Variable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Variable::InternalSwap(Variable* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Variable::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Code::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Code::kLineFieldNumber;
const int Code::kStartupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Code::Code()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsCode();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.Code)
}
Code::Code(const Code& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      line_(from.line_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  startup_ = from.startup_;
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.Code)
}

void Code::SharedCtor() {
  startup_ = false;
  _cached_size_ = 0;
}

Code::~Code() {
  // @@protoc_insertion_point(destructor:BERTBuffers.Code)
  SharedDtor();
}

void Code::SharedDtor() {
}

void Code::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Code::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Code& Code::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsCode();
  return *internal_default_instance();
}

Code* Code::New(::google::protobuf::Arena* arena) const {
  Code* n = new Code;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Code::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.Code)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  line_.Clear();
  startup_ = false;
  _internal_metadata_.Clear();
}

bool Code::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.Code)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string line = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_line()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->line(this->line_size() - 1).data(),
            static_cast<int>(this->line(this->line_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.Code.line"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool startup = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &startup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.Code)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.Code)
  return false;
#undef DO_
}

void Code::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.Code)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string line = 1;
  for (int i = 0, n = this->line_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->line(i).data(), static_cast<int>(this->line(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Code.line");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->line(i), output);
  }

  // bool startup = 2;
  if (this->startup() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->startup(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.Code)
}

::google::protobuf::uint8* Code::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.Code)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string line = 1;
  for (int i = 0, n = this->line_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->line(i).data(), static_cast<int>(this->line(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Code.line");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->line(i), target);
  }

  // bool startup = 2;
  if (this->startup() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->startup(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.Code)
  return target;
}

size_t Code::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.Code)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string line = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->line_size());
  for (int i = 0, n = this->line_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->line(i));
  }

  // bool startup = 2;
  if (this->startup() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Code::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.Code)
  GOOGLE_DCHECK_NE(&from, this);
  const Code* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Code>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.Code)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.Code)
    MergeFrom(*source);
  }
}

void Code::MergeFrom(const Code& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.Code)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  line_.MergeFrom(from.line_);
  if (from.startup() != 0) {
    set_startup(from.startup());
  }
}

void Code::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.Code)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Code::CopyFrom(const Code& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.Code)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Code::IsInitialized() const {
  return true;
}

void Code::Swap(Code* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Code::InternalSwap(Code* other) {
  using std::swap;
  line_.InternalSwap(&other->line_);
  swap(startup_, other->startup_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Code::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CompositeFunctionCall::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompositeFunctionCall::kFunctionFieldNumber;
const int CompositeFunctionCall::kArgumentsFieldNumber;
const int CompositeFunctionCall::kPointerFieldNumber;
const int CompositeFunctionCall::kIndexFieldNumber;
const int CompositeFunctionCall::kTypeFieldNumber;
const int CompositeFunctionCall::kTargetFieldNumber;
const int CompositeFunctionCall::kFlagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompositeFunctionCall::CompositeFunctionCall()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsCompositeFunctionCall();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.CompositeFunctionCall)
}
CompositeFunctionCall::CompositeFunctionCall(const CompositeFunctionCall& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      arguments_(from.arguments_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  function_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.function().size() > 0) {
    function_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function_);
  }
  ::memcpy(&pointer_, &from.pointer_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&pointer_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.CompositeFunctionCall)
}

void CompositeFunctionCall::SharedCtor() {
  function_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pointer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&pointer_)) + sizeof(flags_));
  _cached_size_ = 0;
}

CompositeFunctionCall::~CompositeFunctionCall() {
  // @@protoc_insertion_point(destructor:BERTBuffers.CompositeFunctionCall)
  SharedDtor();
}

void CompositeFunctionCall::SharedDtor() {
  function_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CompositeFunctionCall::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CompositeFunctionCall::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompositeFunctionCall& CompositeFunctionCall::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsCompositeFunctionCall();
  return *internal_default_instance();
}

CompositeFunctionCall* CompositeFunctionCall::New(::google::protobuf::Arena* arena) const {
  CompositeFunctionCall* n = new CompositeFunctionCall;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CompositeFunctionCall::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.CompositeFunctionCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arguments_.Clear();
  function_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pointer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&pointer_)) + sizeof(flags_));
  _internal_metadata_.Clear();
}

bool CompositeFunctionCall::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.CompositeFunctionCall)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string function = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_function()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->function().data(), static_cast<int>(this->function().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.CompositeFunctionCall.function"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .BERTBuffers.Variable arguments = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_arguments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 pointer = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pointer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.CallType type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::BERTBuffers::CallType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.CallTarget target = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_target(static_cast< ::BERTBuffers::CallTarget >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 flags = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.CompositeFunctionCall)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.CompositeFunctionCall)
  return false;
#undef DO_
}

void CompositeFunctionCall::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.CompositeFunctionCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string function = 1;
  if (this->function().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->function().data(), static_cast<int>(this->function().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.CompositeFunctionCall.function");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->function(), output);
  }

  // repeated .BERTBuffers.Variable arguments = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arguments(static_cast<int>(i)), output);
  }

  // uint64 pointer = 3;
  if (this->pointer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->pointer(), output);
  }

  // uint32 index = 4;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->index(), output);
  }

  // .BERTBuffers.CallType type = 5;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->type(), output);
  }

  // .BERTBuffers.CallTarget target = 6;
  if (this->target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->target(), output);
  }

  // uint32 flags = 7;
  if (this->flags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->flags(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.CompositeFunctionCall)
}

::google::protobuf::uint8* CompositeFunctionCall::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.CompositeFunctionCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string function = 1;
  if (this->function().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->function().data(), static_cast<int>(this->function().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.CompositeFunctionCall.function");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->function(), target);
  }

  // repeated .BERTBuffers.Variable arguments = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->arguments(static_cast<int>(i)), deterministic, target);
  }

  // uint64 pointer = 3;
  if (this->pointer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->pointer(), target);
  }

  // uint32 index = 4;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->index(), target);
  }

  // .BERTBuffers.CallType type = 5;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->type(), target);
  }

  // .BERTBuffers.CallTarget target = 6;
  if (this->target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->target(), target);
  }

  // uint32 flags = 7;
  if (this->flags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->flags(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.CompositeFunctionCall)
  return target;
}

size_t CompositeFunctionCall::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.CompositeFunctionCall)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .BERTBuffers.Variable arguments = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->arguments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arguments(static_cast<int>(i)));
    }
  }

  // string function = 1;
  if (this->function().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->function());
  }

  // uint64 pointer = 3;
  if (this->pointer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->pointer());
  }

  // uint32 index = 4;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  // .BERTBuffers.CallType type = 5;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // .BERTBuffers.CallTarget target = 6;
  if (this->target() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->target());
  }

  // uint32 flags = 7;
  if (this->flags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompositeFunctionCall::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.CompositeFunctionCall)
  GOOGLE_DCHECK_NE(&from, this);
  const CompositeFunctionCall* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompositeFunctionCall>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.CompositeFunctionCall)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.CompositeFunctionCall)
    MergeFrom(*source);
  }
}

void CompositeFunctionCall::MergeFrom(const CompositeFunctionCall& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.CompositeFunctionCall)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arguments_.MergeFrom(from.arguments_);
  if (from.function().size() > 0) {

    function_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function_);
  }
  if (from.pointer() != 0) {
    set_pointer(from.pointer());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.target() != 0) {
    set_target(from.target());
  }
  if (from.flags() != 0) {
    set_flags(from.flags());
  }
}

void CompositeFunctionCall::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.CompositeFunctionCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompositeFunctionCall::CopyFrom(const CompositeFunctionCall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.CompositeFunctionCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompositeFunctionCall::IsInitialized() const {
  return true;
}

void CompositeFunctionCall::Swap(CompositeFunctionCall* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompositeFunctionCall::InternalSwap(CompositeFunctionCall* other) {
  using std::swap;
  arguments_.InternalSwap(&other->arguments_);
  function_.Swap(&other->function_);
  swap(pointer_, other->pointer_);
  swap(index_, other->index_);
  swap(type_, other->type_);
  swap(target_, other->target_);
  swap(flags_, other->flags_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CompositeFunctionCall::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GraphicsUpdate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GraphicsUpdate::kCommandFieldNumber;
const int GraphicsUpdate::kNameFieldNumber;
const int GraphicsUpdate::kPathFieldNumber;
const int GraphicsUpdate::kWidthFieldNumber;
const int GraphicsUpdate::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GraphicsUpdate::GraphicsUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsGraphicsUpdate();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.GraphicsUpdate)
}
GraphicsUpdate::GraphicsUpdate(const GraphicsUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  ::memcpy(&command_, &from.command_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&command_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.GraphicsUpdate)
}

void GraphicsUpdate::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&command_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&command_)) + sizeof(height_));
  _cached_size_ = 0;
}

GraphicsUpdate::~GraphicsUpdate() {
  // @@protoc_insertion_point(destructor:BERTBuffers.GraphicsUpdate)
  SharedDtor();
}

void GraphicsUpdate::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GraphicsUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GraphicsUpdate::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GraphicsUpdate& GraphicsUpdate::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsGraphicsUpdate();
  return *internal_default_instance();
}

GraphicsUpdate* GraphicsUpdate::New(::google::protobuf::Arena* arena) const {
  GraphicsUpdate* n = new GraphicsUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GraphicsUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.GraphicsUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&command_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&command_)) + sizeof(height_));
  _internal_metadata_.Clear();
}

bool GraphicsUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.GraphicsUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .BERTBuffers.GraphicsUpdateCommand command = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_command(static_cast< ::BERTBuffers::GraphicsUpdateCommand >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.GraphicsUpdate.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string path = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.GraphicsUpdate.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 width = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 height = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.GraphicsUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.GraphicsUpdate)
  return false;
#undef DO_
}

void GraphicsUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.GraphicsUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BERTBuffers.GraphicsUpdateCommand command = 1;
  if (this->command() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->command(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.GraphicsUpdate.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string path = 3;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.GraphicsUpdate.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->path(), output);
  }

  // uint32 width = 4;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->width(), output);
  }

  // uint32 height = 5;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->height(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.GraphicsUpdate)
}

::google::protobuf::uint8* GraphicsUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.GraphicsUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BERTBuffers.GraphicsUpdateCommand command = 1;
  if (this->command() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->command(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.GraphicsUpdate.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string path = 3;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.GraphicsUpdate.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->path(), target);
  }

  // uint32 width = 4;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->width(), target);
  }

  // uint32 height = 5;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->height(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.GraphicsUpdate)
  return target;
}

size_t GraphicsUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.GraphicsUpdate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string path = 3;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // .BERTBuffers.GraphicsUpdateCommand command = 1;
  if (this->command() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->command());
  }

  // uint32 width = 4;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->width());
  }

  // uint32 height = 5;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GraphicsUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.GraphicsUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const GraphicsUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GraphicsUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.GraphicsUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.GraphicsUpdate)
    MergeFrom(*source);
  }
}

void GraphicsUpdate::MergeFrom(const GraphicsUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.GraphicsUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.command() != 0) {
    set_command(from.command());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
}

void GraphicsUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.GraphicsUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GraphicsUpdate::CopyFrom(const GraphicsUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.GraphicsUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraphicsUpdate::IsInitialized() const {
  return true;
}

void GraphicsUpdate::Swap(GraphicsUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GraphicsUpdate::InternalSwap(GraphicsUpdate* other) {
  using std::swap;
  name_.Swap(&other->name_);
  path_.Swap(&other->path_);
  swap(command_, other->command_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GraphicsUpdate::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GraphicsCommand::InitAsDefaultInstance() {
  ::BERTBuffers::_GraphicsCommand_default_instance_._instance.get_mutable()->context_ = const_cast< ::BERTBuffers::GraphicsContext*>(
      ::BERTBuffers::GraphicsContext::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GraphicsCommand::kCommandFieldNumber;
const int GraphicsCommand::kXFieldNumber;
const int GraphicsCommand::kYFieldNumber;
const int GraphicsCommand::kRFieldNumber;
const int GraphicsCommand::kRotFieldNumber;
const int GraphicsCommand::kTextFieldNumber;
const int GraphicsCommand::kFilledFieldNumber;
const int GraphicsCommand::kHadjFieldNumber;
const int GraphicsCommand::kRasterFieldNumber;
const int GraphicsCommand::kInterpolateFieldNumber;
const int GraphicsCommand::kDeviceTypeFieldNumber;
const int GraphicsCommand::kContextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GraphicsCommand::GraphicsCommand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsGraphicsCommand();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.GraphicsCommand)
}
GraphicsCommand::GraphicsCommand(const GraphicsCommand& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      x_(from.x_),
      y_(from.y_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.command().size() > 0) {
    command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_);
  }
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  raster_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.raster().size() > 0) {
    raster_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raster_);
  }
  device_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_type().size() > 0) {
    device_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_type_);
  }
  if (from.has_context()) {
    context_ = new ::BERTBuffers::GraphicsContext(*from.context_);
  } else {
    context_ = NULL;
  }
  ::memcpy(&r_, &from.r_,
    static_cast<size_t>(reinterpret_cast<char*>(&interpolate_) -
    reinterpret_cast<char*>(&r_)) + sizeof(interpolate_));
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.GraphicsCommand)
}

void GraphicsCommand::SharedCtor() {
  command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raster_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interpolate_) -
      reinterpret_cast<char*>(&context_)) + sizeof(interpolate_));
  _cached_size_ = 0;
}

GraphicsCommand::~GraphicsCommand() {
  // @@protoc_insertion_point(destructor:BERTBuffers.GraphicsCommand)
  SharedDtor();
}

void GraphicsCommand::SharedDtor() {
  command_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raster_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete context_;
}

void GraphicsCommand::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GraphicsCommand::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GraphicsCommand& GraphicsCommand::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsGraphicsCommand();
  return *internal_default_instance();
}

GraphicsCommand* GraphicsCommand::New(::google::protobuf::Arena* arena) const {
  GraphicsCommand* n = new GraphicsCommand;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GraphicsCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.GraphicsCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  x_.Clear();
  y_.Clear();
  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raster_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  ::memset(&r_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interpolate_) -
      reinterpret_cast<char*>(&r_)) + sizeof(interpolate_));
  _internal_metadata_.Clear();
}

bool GraphicsCommand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.GraphicsCommand)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string command = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_command()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->command().data(), static_cast<int>(this->command().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.GraphicsCommand.command"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_x())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 18u, input, this->mutable_x())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_y())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 26u, input, this->mutable_y())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double r = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double rot = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.GraphicsCommand.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool filled = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &filled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double hadj = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &hadj_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes raster = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_raster()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool interpolate = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &interpolate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_type = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_type().data(), static_cast<int>(this->device_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.GraphicsCommand.device_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.GraphicsContext context = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.GraphicsCommand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.GraphicsCommand)
  return false;
#undef DO_
}

void GraphicsCommand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.GraphicsCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command().data(), static_cast<int>(this->command().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.GraphicsCommand.command");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->command(), output);
  }

  // repeated double x = 2;
  if (this->x_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _x_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->x().data(), this->x_size(), output);
  }

  // repeated double y = 3;
  if (this->y_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _y_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->y().data(), this->y_size(), output);
  }

  // double r = 4;
  if (this->r() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->r(), output);
  }

  // double rot = 5;
  if (this->rot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->rot(), output);
  }

  // string text = 6;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.GraphicsCommand.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->text(), output);
  }

  // bool filled = 7;
  if (this->filled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->filled(), output);
  }

  // double hadj = 8;
  if (this->hadj() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->hadj(), output);
  }

  // bytes raster = 9;
  if (this->raster().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->raster(), output);
  }

  // bool interpolate = 10;
  if (this->interpolate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->interpolate(), output);
  }

  // string device_type = 14;
  if (this->device_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_type().data(), static_cast<int>(this->device_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.GraphicsCommand.device_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->device_type(), output);
  }

  // .BERTBuffers.GraphicsContext context = 15;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->context_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.GraphicsCommand)
}

::google::protobuf::uint8* GraphicsCommand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.GraphicsCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command().data(), static_cast<int>(this->command().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.GraphicsCommand.command");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->command(), target);
  }

  // repeated double x = 2;
  if (this->x_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _x_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->x_, target);
  }

  // repeated double y = 3;
  if (this->y_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _y_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->y_, target);
  }

  // double r = 4;
  if (this->r() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->r(), target);
  }

  // double rot = 5;
  if (this->rot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->rot(), target);
  }

  // string text = 6;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.GraphicsCommand.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->text(), target);
  }

  // bool filled = 7;
  if (this->filled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->filled(), target);
  }

  // double hadj = 8;
  if (this->hadj() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->hadj(), target);
  }

  // bytes raster = 9;
  if (this->raster().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->raster(), target);
  }

  // bool interpolate = 10;
  if (this->interpolate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->interpolate(), target);
  }

  // string device_type = 14;
  if (this->device_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_type().data(), static_cast<int>(this->device_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.GraphicsCommand.device_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->device_type(), target);
  }

  // .BERTBuffers.GraphicsContext context = 15;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, *this->context_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.GraphicsCommand)
  return target;
}

size_t GraphicsCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.GraphicsCommand)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double x = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->x_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _x_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double y = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->y_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _y_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->command());
  }

  // string text = 6;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // bytes raster = 9;
  if (this->raster().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->raster());
  }

  // string device_type = 14;
  if (this->device_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_type());
  }

  // .BERTBuffers.GraphicsContext context = 15;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->context_);
  }

  // double r = 4;
  if (this->r() != 0) {
    total_size += 1 + 8;
  }

  // double rot = 5;
  if (this->rot() != 0) {
    total_size += 1 + 8;
  }

  // double hadj = 8;
  if (this->hadj() != 0) {
    total_size += 1 + 8;
  }

  // bool filled = 7;
  if (this->filled() != 0) {
    total_size += 1 + 1;
  }

  // bool interpolate = 10;
  if (this->interpolate() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GraphicsCommand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.GraphicsCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const GraphicsCommand* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GraphicsCommand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.GraphicsCommand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.GraphicsCommand)
    MergeFrom(*source);
  }
}

void GraphicsCommand::MergeFrom(const GraphicsCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.GraphicsCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  x_.MergeFrom(from.x_);
  y_.MergeFrom(from.y_);
  if (from.command().size() > 0) {

    command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_);
  }
  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.raster().size() > 0) {

    raster_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raster_);
  }
  if (from.device_type().size() > 0) {

    device_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_type_);
  }
  if (from.has_context()) {
    mutable_context()->::BERTBuffers::GraphicsContext::MergeFrom(from.context());
  }
  if (from.r() != 0) {
    set_r(from.r());
  }
  if (from.rot() != 0) {
    set_rot(from.rot());
  }
  if (from.hadj() != 0) {
    set_hadj(from.hadj());
  }
  if (from.filled() != 0) {
    set_filled(from.filled());
  }
  if (from.interpolate() != 0) {
    set_interpolate(from.interpolate());
  }
}

void GraphicsCommand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.GraphicsCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GraphicsCommand::CopyFrom(const GraphicsCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.GraphicsCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraphicsCommand::IsInitialized() const {
  return true;
}

void GraphicsCommand::Swap(GraphicsCommand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GraphicsCommand::InternalSwap(GraphicsCommand* other) {
  using std::swap;
  x_.InternalSwap(&other->x_);
  y_.InternalSwap(&other->y_);
  command_.Swap(&other->command_);
  text_.Swap(&other->text_);
  raster_.Swap(&other->raster_);
  device_type_.Swap(&other->device_type_);
  swap(context_, other->context_);
  swap(r_, other->r_);
  swap(rot_, other->rot_);
  swap(hadj_, other->hadj_);
  swap(filled_, other->filled_);
  swap(interpolate_, other->interpolate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GraphicsCommand::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Color::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Color::kAFieldNumber;
const int Color::kRFieldNumber;
const int Color::kGFieldNumber;
const int Color::kBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Color::Color()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsColor();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.Color)
}
Color::Color(const Color& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&a_, &from.a_,
    static_cast<size_t>(reinterpret_cast<char*>(&b_) -
    reinterpret_cast<char*>(&a_)) + sizeof(b_));
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.Color)
}

void Color::SharedCtor() {
  ::memset(&a_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&b_) -
      reinterpret_cast<char*>(&a_)) + sizeof(b_));
  _cached_size_ = 0;
}

Color::~Color() {
  // @@protoc_insertion_point(destructor:BERTBuffers.Color)
  SharedDtor();
}

void Color::SharedDtor() {
}

void Color::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Color::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Color& Color::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsColor();
  return *internal_default_instance();
}

Color* Color::New(::google::protobuf::Arena* arena) const {
  Color* n = new Color;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Color::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.Color)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&a_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&b_) -
      reinterpret_cast<char*>(&a_)) + sizeof(b_));
  _internal_metadata_.Clear();
}

bool Color::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.Color)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 a = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 r = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &r_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 g = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &g_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 b = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.Color)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.Color)
  return false;
#undef DO_
}

void Color::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.Color)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 a = 1;
  if (this->a() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->a(), output);
  }

  // uint32 r = 2;
  if (this->r() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->r(), output);
  }

  // uint32 g = 3;
  if (this->g() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->g(), output);
  }

  // uint32 b = 4;
  if (this->b() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->b(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.Color)
}

::google::protobuf::uint8* Color::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.Color)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 a = 1;
  if (this->a() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->a(), target);
  }

  // uint32 r = 2;
  if (this->r() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->r(), target);
  }

  // uint32 g = 3;
  if (this->g() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->g(), target);
  }

  // uint32 b = 4;
  if (this->b() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->b(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.Color)
  return target;
}

size_t Color::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.Color)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 a = 1;
  if (this->a() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->a());
  }

  // uint32 r = 2;
  if (this->r() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->r());
  }

  // uint32 g = 3;
  if (this->g() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->g());
  }

  // uint32 b = 4;
  if (this->b() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->b());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Color::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.Color)
  GOOGLE_DCHECK_NE(&from, this);
  const Color* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Color>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.Color)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.Color)
    MergeFrom(*source);
  }
}

void Color::MergeFrom(const Color& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.Color)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.a() != 0) {
    set_a(from.a());
  }
  if (from.r() != 0) {
    set_r(from.r());
  }
  if (from.g() != 0) {
    set_g(from.g());
  }
  if (from.b() != 0) {
    set_b(from.b());
  }
}

void Color::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.Color)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Color::CopyFrom(const Color& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.Color)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Color::IsInitialized() const {
  return true;
}

void Color::Swap(Color* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Color::InternalSwap(Color* other) {
  using std::swap;
  swap(a_, other->a_);
  swap(r_, other->r_);
  swap(g_, other->g_);
  swap(b_, other->b_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Color::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GraphicsContext::InitAsDefaultInstance() {
  ::BERTBuffers::_GraphicsContext_default_instance_._instance.get_mutable()->col_ = const_cast< ::BERTBuffers::Color*>(
      ::BERTBuffers::Color::internal_default_instance());
  ::BERTBuffers::_GraphicsContext_default_instance_._instance.get_mutable()->fill_ = const_cast< ::BERTBuffers::Color*>(
      ::BERTBuffers::Color::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GraphicsContext::kColFieldNumber;
const int GraphicsContext::kFillFieldNumber;
const int GraphicsContext::kGammaFieldNumber;
const int GraphicsContext::kLwdFieldNumber;
const int GraphicsContext::kLtyFieldNumber;
const int GraphicsContext::kLendFieldNumber;
const int GraphicsContext::kLjoinFieldNumber;
const int GraphicsContext::kLmitreFieldNumber;
const int GraphicsContext::kCexFieldNumber;
const int GraphicsContext::kPsFieldNumber;
const int GraphicsContext::kLineheightFieldNumber;
const int GraphicsContext::kFontfaceFieldNumber;
const int GraphicsContext::kFontfamilyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GraphicsContext::GraphicsContext()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsGraphicsContext();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.GraphicsContext)
}
GraphicsContext::GraphicsContext(const GraphicsContext& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fontfamily_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fontfamily().size() > 0) {
    fontfamily_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fontfamily_);
  }
  if (from.has_col()) {
    col_ = new ::BERTBuffers::Color(*from.col_);
  } else {
    col_ = NULL;
  }
  if (from.has_fill()) {
    fill_ = new ::BERTBuffers::Color(*from.fill_);
  } else {
    fill_ = NULL;
  }
  ::memcpy(&gamma_, &from.gamma_,
    static_cast<size_t>(reinterpret_cast<char*>(&lineheight_) -
    reinterpret_cast<char*>(&gamma_)) + sizeof(lineheight_));
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.GraphicsContext)
}

void GraphicsContext::SharedCtor() {
  fontfamily_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&col_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lineheight_) -
      reinterpret_cast<char*>(&col_)) + sizeof(lineheight_));
  _cached_size_ = 0;
}

GraphicsContext::~GraphicsContext() {
  // @@protoc_insertion_point(destructor:BERTBuffers.GraphicsContext)
  SharedDtor();
}

void GraphicsContext::SharedDtor() {
  fontfamily_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete col_;
  if (this != internal_default_instance()) delete fill_;
}

void GraphicsContext::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GraphicsContext::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GraphicsContext& GraphicsContext::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsGraphicsContext();
  return *internal_default_instance();
}

GraphicsContext* GraphicsContext::New(::google::protobuf::Arena* arena) const {
  GraphicsContext* n = new GraphicsContext;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GraphicsContext::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.GraphicsContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fontfamily_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && col_ != NULL) {
    delete col_;
  }
  col_ = NULL;
  if (GetArenaNoVirtual() == NULL && fill_ != NULL) {
    delete fill_;
  }
  fill_ = NULL;
  ::memset(&gamma_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lineheight_) -
      reinterpret_cast<char*>(&gamma_)) + sizeof(lineheight_));
  _internal_metadata_.Clear();
}

bool GraphicsContext::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.GraphicsContext)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .BERTBuffers.Color col = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_col()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.Color fill = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fill()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double gamma = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gamma_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double lwd = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lwd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 lty = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 lend = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ljoin = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ljoin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double lmitre = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lmitre_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double cex = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double ps = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double lineheight = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lineheight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 fontface = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fontface_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fontfamily = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fontfamily()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fontfamily().data(), static_cast<int>(this->fontfamily().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.GraphicsContext.fontfamily"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.GraphicsContext)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.GraphicsContext)
  return false;
#undef DO_
}

void GraphicsContext::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.GraphicsContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BERTBuffers.Color col = 1;
  if (this->has_col()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->col_, output);
  }

  // .BERTBuffers.Color fill = 2;
  if (this->has_fill()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->fill_, output);
  }

  // double gamma = 3;
  if (this->gamma() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->gamma(), output);
  }

  // double lwd = 4;
  if (this->lwd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->lwd(), output);
  }

  // int32 lty = 5;
  if (this->lty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->lty(), output);
  }

  // int32 lend = 6;
  if (this->lend() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->lend(), output);
  }

  // int32 ljoin = 7;
  if (this->ljoin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->ljoin(), output);
  }

  // double lmitre = 8;
  if (this->lmitre() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->lmitre(), output);
  }

  // double cex = 9;
  if (this->cex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->cex(), output);
  }

  // double ps = 10;
  if (this->ps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->ps(), output);
  }

  // double lineheight = 11;
  if (this->lineheight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->lineheight(), output);
  }

  // int32 fontface = 12;
  if (this->fontface() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->fontface(), output);
  }

  // string fontfamily = 13;
  if (this->fontfamily().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fontfamily().data(), static_cast<int>(this->fontfamily().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.GraphicsContext.fontfamily");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->fontfamily(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.GraphicsContext)
}

::google::protobuf::uint8* GraphicsContext::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.GraphicsContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BERTBuffers.Color col = 1;
  if (this->has_col()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->col_, deterministic, target);
  }

  // .BERTBuffers.Color fill = 2;
  if (this->has_fill()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->fill_, deterministic, target);
  }

  // double gamma = 3;
  if (this->gamma() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->gamma(), target);
  }

  // double lwd = 4;
  if (this->lwd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->lwd(), target);
  }

  // int32 lty = 5;
  if (this->lty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->lty(), target);
  }

  // int32 lend = 6;
  if (this->lend() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->lend(), target);
  }

  // int32 ljoin = 7;
  if (this->ljoin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->ljoin(), target);
  }

  // double lmitre = 8;
  if (this->lmitre() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->lmitre(), target);
  }

  // double cex = 9;
  if (this->cex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->cex(), target);
  }

  // double ps = 10;
  if (this->ps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->ps(), target);
  }

  // double lineheight = 11;
  if (this->lineheight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->lineheight(), target);
  }

  // int32 fontface = 12;
  if (this->fontface() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->fontface(), target);
  }

  // string fontfamily = 13;
  if (this->fontfamily().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fontfamily().data(), static_cast<int>(this->fontfamily().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.GraphicsContext.fontfamily");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->fontfamily(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.GraphicsContext)
  return target;
}

size_t GraphicsContext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.GraphicsContext)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string fontfamily = 13;
  if (this->fontfamily().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fontfamily());
  }

  // .BERTBuffers.Color col = 1;
  if (this->has_col()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->col_);
  }

  // .BERTBuffers.Color fill = 2;
  if (this->has_fill()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->fill_);
  }

  // double gamma = 3;
  if (this->gamma() != 0) {
    total_size += 1 + 8;
  }

  // double lwd = 4;
  if (this->lwd() != 0) {
    total_size += 1 + 8;
  }

  // int32 lty = 5;
  if (this->lty() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lty());
  }

  // int32 lend = 6;
  if (this->lend() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lend());
  }

  // double lmitre = 8;
  if (this->lmitre() != 0) {
    total_size += 1 + 8;
  }

  // double cex = 9;
  if (this->cex() != 0) {
    total_size += 1 + 8;
  }

  // int32 ljoin = 7;
  if (this->ljoin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ljoin());
  }

  // int32 fontface = 12;
  if (this->fontface() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fontface());
  }

  // double ps = 10;
  if (this->ps() != 0) {
    total_size += 1 + 8;
  }

  // double lineheight = 11;
  if (this->lineheight() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GraphicsContext::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.GraphicsContext)
  GOOGLE_DCHECK_NE(&from, this);
  const GraphicsContext* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GraphicsContext>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.GraphicsContext)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.GraphicsContext)
    MergeFrom(*source);
  }
}

void GraphicsContext::MergeFrom(const GraphicsContext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.GraphicsContext)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fontfamily().size() > 0) {

    fontfamily_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fontfamily_);
  }
  if (from.has_col()) {
    mutable_col()->::BERTBuffers::Color::MergeFrom(from.col());
  }
  if (from.has_fill()) {
    mutable_fill()->::BERTBuffers::Color::MergeFrom(from.fill());
  }
  if (from.gamma() != 0) {
    set_gamma(from.gamma());
  }
  if (from.lwd() != 0) {
    set_lwd(from.lwd());
  }
  if (from.lty() != 0) {
    set_lty(from.lty());
  }
  if (from.lend() != 0) {
    set_lend(from.lend());
  }
  if (from.lmitre() != 0) {
    set_lmitre(from.lmitre());
  }
  if (from.cex() != 0) {
    set_cex(from.cex());
  }
  if (from.ljoin() != 0) {
    set_ljoin(from.ljoin());
  }
  if (from.fontface() != 0) {
    set_fontface(from.fontface());
  }
  if (from.ps() != 0) {
    set_ps(from.ps());
  }
  if (from.lineheight() != 0) {
    set_lineheight(from.lineheight());
  }
}

void GraphicsContext::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.GraphicsContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GraphicsContext::CopyFrom(const GraphicsContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.GraphicsContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraphicsContext::IsInitialized() const {
  return true;
}

void GraphicsContext::Swap(GraphicsContext* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GraphicsContext::InternalSwap(GraphicsContext* other) {
  using std::swap;
  fontfamily_.Swap(&other->fontfamily_);
  swap(col_, other->col_);
  swap(fill_, other->fill_);
  swap(gamma_, other->gamma_);
  swap(lwd_, other->lwd_);
  swap(lty_, other->lty_);
  swap(lend_, other->lend_);
  swap(lmitre_, other->lmitre_);
  swap(cex_, other->cex_);
  swap(ljoin_, other->ljoin_);
  swap(fontface_, other->fontface_);
  swap(ps_, other->ps_);
  swap(lineheight_, other->lineheight_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GraphicsContext::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MIMEData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MIMEData::kMimeTypeFieldNumber;
const int MIMEData::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MIMEData::MIMEData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsMIMEData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.MIMEData)
}
MIMEData::MIMEData(const MIMEData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mime_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mime_type().size() > 0) {
    mime_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mime_type_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.MIMEData)
}

void MIMEData::SharedCtor() {
  mime_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MIMEData::~MIMEData() {
  // @@protoc_insertion_point(destructor:BERTBuffers.MIMEData)
  SharedDtor();
}

void MIMEData::SharedDtor() {
  mime_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MIMEData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MIMEData::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MIMEData& MIMEData::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsMIMEData();
  return *internal_default_instance();
}

MIMEData* MIMEData::New(::google::protobuf::Arena* arena) const {
  MIMEData* n = new MIMEData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MIMEData::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.MIMEData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mime_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MIMEData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.MIMEData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string mime_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mime_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mime_type().data(), static_cast<int>(this->mime_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.MIMEData.mime_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.MIMEData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.MIMEData)
  return false;
#undef DO_
}

void MIMEData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.MIMEData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mime_type = 1;
  if (this->mime_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mime_type().data(), static_cast<int>(this->mime_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.MIMEData.mime_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mime_type(), output);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.MIMEData)
}

::google::protobuf::uint8* MIMEData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.MIMEData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mime_type = 1;
  if (this->mime_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mime_type().data(), static_cast<int>(this->mime_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.MIMEData.mime_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mime_type(), target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.MIMEData)
  return target;
}

size_t MIMEData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.MIMEData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string mime_type = 1;
  if (this->mime_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mime_type());
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MIMEData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.MIMEData)
  GOOGLE_DCHECK_NE(&from, this);
  const MIMEData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MIMEData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.MIMEData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.MIMEData)
    MergeFrom(*source);
  }
}

void MIMEData::MergeFrom(const MIMEData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.MIMEData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mime_type().size() > 0) {

    mime_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mime_type_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void MIMEData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.MIMEData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MIMEData::CopyFrom(const MIMEData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.MIMEData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MIMEData::IsInitialized() const {
  return true;
}

void MIMEData::Swap(MIMEData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MIMEData::InternalSwap(MIMEData* other) {
  using std::swap;
  mime_type_.Swap(&other->mime_type_);
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MIMEData::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Console::InitAsDefaultInstance() {
  ::BERTBuffers::_Console_default_instance_.text_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::BERTBuffers::_Console_default_instance_.err_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::BERTBuffers::_Console_default_instance_.prompt_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::BERTBuffers::_Console_default_instance_.graphics_ = const_cast< ::BERTBuffers::GraphicsCommand*>(
      ::BERTBuffers::GraphicsCommand::internal_default_instance());
  ::BERTBuffers::_Console_default_instance_.mime_data_ = const_cast< ::BERTBuffers::MIMEData*>(
      ::BERTBuffers::MIMEData::internal_default_instance());
  ::BERTBuffers::_Console_default_instance_.history_ = const_cast< ::BERTBuffers::Variable*>(
      ::BERTBuffers::Variable::internal_default_instance());
}
void Console::set_allocated_graphics(::BERTBuffers::GraphicsCommand* graphics) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (graphics) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      graphics = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, graphics, submessage_arena);
    }
    set_has_graphics();
    message_.graphics_ = graphics;
  }
  // @@protoc_insertion_point(field_set_allocated:BERTBuffers.Console.graphics)
}
void Console::set_allocated_mime_data(::BERTBuffers::MIMEData* mime_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (mime_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mime_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mime_data, submessage_arena);
    }
    set_has_mime_data();
    message_.mime_data_ = mime_data;
  }
  // @@protoc_insertion_point(field_set_allocated:BERTBuffers.Console.mime_data)
}
void Console::set_allocated_history(::BERTBuffers::Variable* history) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (history) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      history = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, history, submessage_arena);
    }
    set_has_history();
    message_.history_ = history;
  }
  // @@protoc_insertion_point(field_set_allocated:BERTBuffers.Console.history)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Console::kTextFieldNumber;
const int Console::kErrFieldNumber;
const int Console::kPromptFieldNumber;
const int Console::kGraphicsFieldNumber;
const int Console::kMimeDataFieldNumber;
const int Console::kHistoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Console::Console()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsConsole();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.Console)
}
Console::Console(const Console& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_message();
  switch (from.message_case()) {
    case kText: {
      set_text(from.text());
      break;
    }
    case kErr: {
      set_err(from.err());
      break;
    }
    case kPrompt: {
      set_prompt(from.prompt());
      break;
    }
    case kGraphics: {
      mutable_graphics()->::BERTBuffers::GraphicsCommand::MergeFrom(from.graphics());
      break;
    }
    case kMimeData: {
      mutable_mime_data()->::BERTBuffers::MIMEData::MergeFrom(from.mime_data());
      break;
    }
    case kHistory: {
      mutable_history()->::BERTBuffers::Variable::MergeFrom(from.history());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.Console)
}

void Console::SharedCtor() {
  clear_has_message();
  _cached_size_ = 0;
}

Console::~Console() {
  // @@protoc_insertion_point(destructor:BERTBuffers.Console)
  SharedDtor();
}

void Console::SharedDtor() {
  if (has_message()) {
    clear_message();
  }
}

void Console::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Console::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Console& Console::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsConsole();
  return *internal_default_instance();
}

Console* Console::New(::google::protobuf::Arena* arena) const {
  Console* n = new Console;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Console::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:BERTBuffers.Console)
  switch (message_case()) {
    case kText: {
      message_.text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kErr: {
      message_.err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kPrompt: {
      message_.prompt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kGraphics: {
      delete message_.graphics_;
      break;
    }
    case kMimeData: {
      delete message_.mime_data_;
      break;
    }
    case kHistory: {
      delete message_.history_;
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_NOT_SET;
}


void Console::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.Console)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_message();
  _internal_metadata_.Clear();
}

bool Console::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.Console)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.Console.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string err = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->err().data(), static_cast<int>(this->err().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.Console.err"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string prompt = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prompt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->prompt().data(), static_cast<int>(this->prompt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.Console.prompt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.GraphicsCommand graphics = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_graphics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.MIMEData mime_data = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mime_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.Variable history = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_history()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.Console)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.Console)
  return false;
#undef DO_
}

void Console::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.Console)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (has_text()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Console.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->err().data(), static_cast<int>(this->err().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Console.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // string prompt = 3;
  if (has_prompt()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prompt().data(), static_cast<int>(this->prompt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Console.prompt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->prompt(), output);
  }

  // .BERTBuffers.GraphicsCommand graphics = 4;
  if (has_graphics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *message_.graphics_, output);
  }

  // .BERTBuffers.MIMEData mime_data = 5;
  if (has_mime_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *message_.mime_data_, output);
  }

  // .BERTBuffers.Variable history = 6;
  if (has_history()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *message_.history_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.Console)
}

::google::protobuf::uint8* Console::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.Console)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (has_text()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Console.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->err().data(), static_cast<int>(this->err().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Console.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // string prompt = 3;
  if (has_prompt()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prompt().data(), static_cast<int>(this->prompt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Console.prompt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->prompt(), target);
  }

  // .BERTBuffers.GraphicsCommand graphics = 4;
  if (has_graphics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *message_.graphics_, deterministic, target);
  }

  // .BERTBuffers.MIMEData mime_data = 5;
  if (has_mime_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *message_.mime_data_, deterministic, target);
  }

  // .BERTBuffers.Variable history = 6;
  if (has_history()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *message_.history_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.Console)
  return target;
}

size_t Console::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.Console)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (message_case()) {
    // string text = 1;
    case kText: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
      break;
    }
    // string err = 2;
    case kErr: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err());
      break;
    }
    // string prompt = 3;
    case kPrompt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->prompt());
      break;
    }
    // .BERTBuffers.GraphicsCommand graphics = 4;
    case kGraphics: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.graphics_);
      break;
    }
    // .BERTBuffers.MIMEData mime_data = 5;
    case kMimeData: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.mime_data_);
      break;
    }
    // .BERTBuffers.Variable history = 6;
    case kHistory: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.history_);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Console::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.Console)
  GOOGLE_DCHECK_NE(&from, this);
  const Console* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Console>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.Console)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.Console)
    MergeFrom(*source);
  }
}

void Console::MergeFrom(const Console& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.Console)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.message_case()) {
    case kText: {
      set_text(from.text());
      break;
    }
    case kErr: {
      set_err(from.err());
      break;
    }
    case kPrompt: {
      set_prompt(from.prompt());
      break;
    }
    case kGraphics: {
      mutable_graphics()->::BERTBuffers::GraphicsCommand::MergeFrom(from.graphics());
      break;
    }
    case kMimeData: {
      mutable_mime_data()->::BERTBuffers::MIMEData::MergeFrom(from.mime_data());
      break;
    }
    case kHistory: {
      mutable_history()->::BERTBuffers::Variable::MergeFrom(from.history());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
}

void Console::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.Console)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Console::CopyFrom(const Console& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.Console)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Console::IsInitialized() const {
  return true;
}

void Console::Swap(Console* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Console::InternalSwap(Console* other) {
  using std::swap;
  swap(message_, other->message_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Console::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FunctionElement::InitAsDefaultInstance() {
  ::BERTBuffers::_FunctionElement_default_instance_._instance.get_mutable()->default_value_ = const_cast< ::BERTBuffers::Variable*>(
      ::BERTBuffers::Variable::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FunctionElement::kNameFieldNumber;
const int FunctionElement::kTypeNameFieldNumber;
const int FunctionElement::kDefaultValueFieldNumber;
const int FunctionElement::kDescriptionFieldNumber;
const int FunctionElement::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FunctionElement::FunctionElement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsArray();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.FunctionElement)
}
FunctionElement::FunctionElement(const FunctionElement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  type_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_name().size() > 0) {
    type_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.has_default_value()) {
    default_value_ = new ::BERTBuffers::Variable(*from.default_value_);
  } else {
    default_value_ = NULL;
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.FunctionElement)
}

void FunctionElement::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&default_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&default_value_)) + sizeof(index_));
  _cached_size_ = 0;
}

FunctionElement::~FunctionElement() {
  // @@protoc_insertion_point(destructor:BERTBuffers.FunctionElement)
  SharedDtor();
}

void FunctionElement::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete default_value_;
}

void FunctionElement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FunctionElement::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FunctionElement& FunctionElement::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsArray();
  return *internal_default_instance();
}

FunctionElement* FunctionElement::New(::google::protobuf::Arena* arena) const {
  FunctionElement* n = new FunctionElement;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FunctionElement::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.FunctionElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && default_value_ != NULL) {
    delete default_value_;
  }
  default_value_ = NULL;
  index_ = 0u;
  _internal_metadata_.Clear();
}

bool FunctionElement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.FunctionElement)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.FunctionElement.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_name().data(), static_cast<int>(this->type_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.FunctionElement.type_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.Variable default_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_default_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.FunctionElement.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 index = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.FunctionElement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.FunctionElement)
  return false;
#undef DO_
}

void FunctionElement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.FunctionElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.FunctionElement.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string type_name = 2;
  if (this->type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_name().data(), static_cast<int>(this->type_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.FunctionElement.type_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type_name(), output);
  }

  // .BERTBuffers.Variable default_value = 3;
  if (this->has_default_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->default_value_, output);
  }

  // string description = 4;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.FunctionElement.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->description(), output);
  }

  // uint32 index = 5;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.FunctionElement)
}

::google::protobuf::uint8* FunctionElement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.FunctionElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.FunctionElement.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string type_name = 2;
  if (this->type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_name().data(), static_cast<int>(this->type_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.FunctionElement.type_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type_name(), target);
  }

  // .BERTBuffers.Variable default_value = 3;
  if (this->has_default_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->default_value_, deterministic, target);
  }

  // string description = 4;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.FunctionElement.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->description(), target);
  }

  // uint32 index = 5;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->index(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.FunctionElement)
  return target;
}

size_t FunctionElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.FunctionElement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string type_name = 2;
  if (this->type_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_name());
  }

  // string description = 4;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // .BERTBuffers.Variable default_value = 3;
  if (this->has_default_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->default_value_);
  }

  // uint32 index = 5;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FunctionElement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.FunctionElement)
  GOOGLE_DCHECK_NE(&from, this);
  const FunctionElement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FunctionElement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.FunctionElement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.FunctionElement)
    MergeFrom(*source);
  }
}

void FunctionElement::MergeFrom(const FunctionElement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.FunctionElement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.type_name().size() > 0) {

    type_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.has_default_value()) {
    mutable_default_value()->::BERTBuffers::Variable::MergeFrom(from.default_value());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
}

void FunctionElement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.FunctionElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FunctionElement::CopyFrom(const FunctionElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.FunctionElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionElement::IsInitialized() const {
  return true;
}

void FunctionElement::Swap(FunctionElement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FunctionElement::InternalSwap(FunctionElement* other) {
  using std::swap;
  name_.Swap(&other->name_);
  type_name_.Swap(&other->type_name_);
  description_.Swap(&other->description_);
  swap(default_value_, other->default_value_);
  swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FunctionElement::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FunctionDescriptor::InitAsDefaultInstance() {
  ::BERTBuffers::_FunctionDescriptor_default_instance_._instance.get_mutable()->function_ = const_cast< ::BERTBuffers::FunctionElement*>(
      ::BERTBuffers::FunctionElement::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FunctionDescriptor::kFunctionFieldNumber;
const int FunctionDescriptor::kCallTypeFieldNumber;
const int FunctionDescriptor::kFlagsFieldNumber;
const int FunctionDescriptor::kCategoryFieldNumber;
const int FunctionDescriptor::kArgumentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FunctionDescriptor::FunctionDescriptor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsArray();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.FunctionDescriptor)
}
FunctionDescriptor::FunctionDescriptor(const FunctionDescriptor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      arguments_(from.arguments_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  category_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.category().size() > 0) {
    category_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.category_);
  }
  if (from.has_function()) {
    function_ = new ::BERTBuffers::FunctionElement(*from.function_);
  } else {
    function_ = NULL;
  }
  ::memcpy(&call_type_, &from.call_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&call_type_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.FunctionDescriptor)
}

void FunctionDescriptor::SharedCtor() {
  category_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&function_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&function_)) + sizeof(flags_));
  _cached_size_ = 0;
}

FunctionDescriptor::~FunctionDescriptor() {
  // @@protoc_insertion_point(destructor:BERTBuffers.FunctionDescriptor)
  SharedDtor();
}

void FunctionDescriptor::SharedDtor() {
  category_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete function_;
}

void FunctionDescriptor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FunctionDescriptor::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FunctionDescriptor& FunctionDescriptor::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsArray();
  return *internal_default_instance();
}

FunctionDescriptor* FunctionDescriptor::New(::google::protobuf::Arena* arena) const {
  FunctionDescriptor* n = new FunctionDescriptor;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FunctionDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.FunctionDescriptor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arguments_.Clear();
  category_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && function_ != NULL) {
    delete function_;
  }
  function_ = NULL;
  ::memset(&call_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&call_type_)) + sizeof(flags_));
  _internal_metadata_.Clear();
}

bool FunctionDescriptor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.FunctionDescriptor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .BERTBuffers.FunctionElement function = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_function()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.CallType call_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_call_type(static_cast< ::BERTBuffers::CallType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 flags = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string category = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_category()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->category().data(), static_cast<int>(this->category().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.FunctionDescriptor.category"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .BERTBuffers.FunctionElement arguments = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_arguments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.FunctionDescriptor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.FunctionDescriptor)
  return false;
#undef DO_
}

void FunctionDescriptor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.FunctionDescriptor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BERTBuffers.FunctionElement function = 1;
  if (this->has_function()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->function_, output);
  }

  // .BERTBuffers.CallType call_type = 2;
  if (this->call_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->call_type(), output);
  }

  // uint32 flags = 3;
  if (this->flags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->flags(), output);
  }

  // string category = 4;
  if (this->category().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->category().data(), static_cast<int>(this->category().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.FunctionDescriptor.category");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->category(), output);
  }

  // repeated .BERTBuffers.FunctionElement arguments = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->arguments(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.FunctionDescriptor)
}

::google::protobuf::uint8* FunctionDescriptor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.FunctionDescriptor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BERTBuffers.FunctionElement function = 1;
  if (this->has_function()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->function_, deterministic, target);
  }

  // .BERTBuffers.CallType call_type = 2;
  if (this->call_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->call_type(), target);
  }

  // uint32 flags = 3;
  if (this->flags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->flags(), target);
  }

  // string category = 4;
  if (this->category().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->category().data(), static_cast<int>(this->category().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.FunctionDescriptor.category");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->category(), target);
  }

  // repeated .BERTBuffers.FunctionElement arguments = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->arguments(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.FunctionDescriptor)
  return target;
}

size_t FunctionDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.FunctionDescriptor)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .BERTBuffers.FunctionElement arguments = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->arguments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arguments(static_cast<int>(i)));
    }
  }

  // string category = 4;
  if (this->category().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->category());
  }

  // .BERTBuffers.FunctionElement function = 1;
  if (this->has_function()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->function_);
  }

  // .BERTBuffers.CallType call_type = 2;
  if (this->call_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->call_type());
  }

  // uint32 flags = 3;
  if (this->flags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FunctionDescriptor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.FunctionDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  const FunctionDescriptor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FunctionDescriptor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.FunctionDescriptor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.FunctionDescriptor)
    MergeFrom(*source);
  }
}

void FunctionDescriptor::MergeFrom(const FunctionDescriptor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.FunctionDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arguments_.MergeFrom(from.arguments_);
  if (from.category().size() > 0) {

    category_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.category_);
  }
  if (from.has_function()) {
    mutable_function()->::BERTBuffers::FunctionElement::MergeFrom(from.function());
  }
  if (from.call_type() != 0) {
    set_call_type(from.call_type());
  }
  if (from.flags() != 0) {
    set_flags(from.flags());
  }
}

void FunctionDescriptor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.FunctionDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FunctionDescriptor::CopyFrom(const FunctionDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.FunctionDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionDescriptor::IsInitialized() const {
  return true;
}

void FunctionDescriptor::Swap(FunctionDescriptor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FunctionDescriptor::InternalSwap(FunctionDescriptor* other) {
  using std::swap;
  arguments_.InternalSwap(&other->arguments_);
  category_.Swap(&other->category_);
  swap(function_, other->function_);
  swap(call_type_, other->call_type_);
  swap(flags_, other->flags_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FunctionDescriptor::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FunctionList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FunctionList::kFunctionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FunctionList::FunctionList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsFunctionList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.FunctionList)
}
FunctionList::FunctionList(const FunctionList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      functions_(from.functions_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.FunctionList)
}

void FunctionList::SharedCtor() {
  _cached_size_ = 0;
}

FunctionList::~FunctionList() {
  // @@protoc_insertion_point(destructor:BERTBuffers.FunctionList)
  SharedDtor();
}

void FunctionList::SharedDtor() {
}

void FunctionList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FunctionList::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FunctionList& FunctionList::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsFunctionList();
  return *internal_default_instance();
}

FunctionList* FunctionList::New(::google::protobuf::Arena* arena) const {
  FunctionList* n = new FunctionList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FunctionList::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.FunctionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  functions_.Clear();
  _internal_metadata_.Clear();
}

bool FunctionList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.FunctionList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .BERTBuffers.FunctionDescriptor functions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_functions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.FunctionList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.FunctionList)
  return false;
#undef DO_
}

void FunctionList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.FunctionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .BERTBuffers.FunctionDescriptor functions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->functions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->functions(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.FunctionList)
}

::google::protobuf::uint8* FunctionList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.FunctionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .BERTBuffers.FunctionDescriptor functions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->functions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->functions(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.FunctionList)
  return target;
}

size_t FunctionList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.FunctionList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .BERTBuffers.FunctionDescriptor functions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->functions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->functions(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FunctionList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.FunctionList)
  GOOGLE_DCHECK_NE(&from, this);
  const FunctionList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FunctionList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.FunctionList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.FunctionList)
    MergeFrom(*source);
  }
}

void FunctionList::MergeFrom(const FunctionList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.FunctionList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  functions_.MergeFrom(from.functions_);
}

void FunctionList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.FunctionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FunctionList::CopyFrom(const FunctionList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.FunctionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionList::IsInitialized() const {
  return true;
}

void FunctionList::Swap(FunctionList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FunctionList::InternalSwap(FunctionList* other) {
  using std::swap;
  functions_.InternalSwap(&other->functions_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FunctionList::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnumValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnumValue::kNameFieldNumber;
const int EnumValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnumValue::EnumValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsEnumValue();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.EnumValue)
}
EnumValue::EnumValue(const EnumValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.EnumValue)
}

void EnumValue::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
  _cached_size_ = 0;
}

EnumValue::~EnumValue() {
  // @@protoc_insertion_point(destructor:BERTBuffers.EnumValue)
  SharedDtor();
}

void EnumValue::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EnumValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnumValue::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnumValue& EnumValue::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsEnumValue();
  return *internal_default_instance();
}

EnumValue* EnumValue::New(::google::protobuf::Arena* arena) const {
  EnumValue* n = new EnumValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnumValue::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.EnumValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
  _internal_metadata_.Clear();
}

bool EnumValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.EnumValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.EnumValue.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.EnumValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.EnumValue)
  return false;
#undef DO_
}

void EnumValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.EnumValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.EnumValue.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.EnumValue)
}

::google::protobuf::uint8* EnumValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.EnumValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.EnumValue.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.EnumValue)
  return target;
}

size_t EnumValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.EnumValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnumValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.EnumValue)
  GOOGLE_DCHECK_NE(&from, this);
  const EnumValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnumValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.EnumValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.EnumValue)
    MergeFrom(*source);
  }
}

void EnumValue::MergeFrom(const EnumValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.EnumValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void EnumValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.EnumValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnumValue::CopyFrom(const EnumValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.EnumValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnumValue::IsInitialized() const {
  return true;
}

void EnumValue::Swap(EnumValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnumValue::InternalSwap(EnumValue* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnumValue::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnumType::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnumType::kNameFieldNumber;
const int EnumType::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnumType::EnumType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsEnumType();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.EnumType)
}
EnumType::EnumType(const EnumType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.EnumType)
}

void EnumType::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

EnumType::~EnumType() {
  // @@protoc_insertion_point(destructor:BERTBuffers.EnumType)
  SharedDtor();
}

void EnumType::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EnumType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnumType::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnumType& EnumType::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsEnumType();
  return *internal_default_instance();
}

EnumType* EnumType::New(::google::protobuf::Arena* arena) const {
  EnumType* n = new EnumType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnumType::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.EnumType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool EnumType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.EnumType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.EnumType.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .BERTBuffers.EnumValue values = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.EnumType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.EnumType)
  return false;
#undef DO_
}

void EnumType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.EnumType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.EnumType.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .BERTBuffers.EnumValue values = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->values_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->values(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.EnumType)
}

::google::protobuf::uint8* EnumType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.EnumType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.EnumType.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .BERTBuffers.EnumValue values = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->values_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->values(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.EnumType)
  return target;
}

size_t EnumType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.EnumType)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .BERTBuffers.EnumValue values = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->values_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->values(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnumType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.EnumType)
  GOOGLE_DCHECK_NE(&from, this);
  const EnumType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnumType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.EnumType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.EnumType)
    MergeFrom(*source);
  }
}

void EnumType::MergeFrom(const EnumType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.EnumType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void EnumType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.EnumType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnumType::CopyFrom(const EnumType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.EnumType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnumType::IsInitialized() const {
  return true;
}

void EnumType::Swap(EnumType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnumType::InternalSwap(EnumType* other) {
  using std::swap;
  values_.InternalSwap(&other->values_);
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnumType::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExternalPointer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExternalPointer::kInterfaceNameFieldNumber;
const int ExternalPointer::kPointerFieldNumber;
const int ExternalPointer::kFunctionsFieldNumber;
const int ExternalPointer::kEnumsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExternalPointer::ExternalPointer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsArray();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.ExternalPointer)
}
ExternalPointer::ExternalPointer(const ExternalPointer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      functions_(from.functions_),
      enums_(from.enums_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  interface_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.interface_name().size() > 0) {
    interface_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.interface_name_);
  }
  pointer_ = from.pointer_;
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.ExternalPointer)
}

void ExternalPointer::SharedCtor() {
  interface_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pointer_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

ExternalPointer::~ExternalPointer() {
  // @@protoc_insertion_point(destructor:BERTBuffers.ExternalPointer)
  SharedDtor();
}

void ExternalPointer::SharedDtor() {
  interface_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExternalPointer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExternalPointer::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExternalPointer& ExternalPointer::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsArray();
  return *internal_default_instance();
}

ExternalPointer* ExternalPointer::New(::google::protobuf::Arena* arena) const {
  ExternalPointer* n = new ExternalPointer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExternalPointer::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.ExternalPointer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  functions_.Clear();
  enums_.Clear();
  interface_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pointer_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ExternalPointer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.ExternalPointer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string interface_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_interface_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->interface_name().data(), static_cast<int>(this->interface_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.ExternalPointer.interface_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 pointer = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pointer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .BERTBuffers.FunctionDescriptor functions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_functions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .BERTBuffers.EnumType enums = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_enums()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.ExternalPointer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.ExternalPointer)
  return false;
#undef DO_
}

void ExternalPointer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.ExternalPointer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string interface_name = 1;
  if (this->interface_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->interface_name().data(), static_cast<int>(this->interface_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.ExternalPointer.interface_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->interface_name(), output);
  }

  // uint64 pointer = 2;
  if (this->pointer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->pointer(), output);
  }

  // repeated .BERTBuffers.FunctionDescriptor functions = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->functions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->functions(static_cast<int>(i)), output);
  }

  // repeated .BERTBuffers.EnumType enums = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->enums_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->enums(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.ExternalPointer)
}

::google::protobuf::uint8* ExternalPointer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.ExternalPointer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string interface_name = 1;
  if (this->interface_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->interface_name().data(), static_cast<int>(this->interface_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.ExternalPointer.interface_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->interface_name(), target);
  }

  // uint64 pointer = 2;
  if (this->pointer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->pointer(), target);
  }

  // repeated .BERTBuffers.FunctionDescriptor functions = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->functions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->functions(static_cast<int>(i)), deterministic, target);
  }

  // repeated .BERTBuffers.EnumType enums = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->enums_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->enums(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.ExternalPointer)
  return target;
}

size_t ExternalPointer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.ExternalPointer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .BERTBuffers.FunctionDescriptor functions = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->functions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->functions(static_cast<int>(i)));
    }
  }

  // repeated .BERTBuffers.EnumType enums = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->enums_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->enums(static_cast<int>(i)));
    }
  }

  // string interface_name = 1;
  if (this->interface_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->interface_name());
  }

  // uint64 pointer = 2;
  if (this->pointer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->pointer());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExternalPointer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.ExternalPointer)
  GOOGLE_DCHECK_NE(&from, this);
  const ExternalPointer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExternalPointer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.ExternalPointer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.ExternalPointer)
    MergeFrom(*source);
  }
}

void ExternalPointer::MergeFrom(const ExternalPointer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.ExternalPointer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  functions_.MergeFrom(from.functions_);
  enums_.MergeFrom(from.enums_);
  if (from.interface_name().size() > 0) {

    interface_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.interface_name_);
  }
  if (from.pointer() != 0) {
    set_pointer(from.pointer());
  }
}

void ExternalPointer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.ExternalPointer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExternalPointer::CopyFrom(const ExternalPointer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.ExternalPointer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExternalPointer::IsInitialized() const {
  return true;
}

void ExternalPointer::Swap(ExternalPointer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExternalPointer::InternalSwap(ExternalPointer* other) {
  using std::swap;
  functions_.InternalSwap(&other->functions_);
  enums_.InternalSwap(&other->enums_);
  interface_name_.Swap(&other->interface_name_);
  swap(pointer_, other->pointer_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExternalPointer::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CallResponse::InitAsDefaultInstance() {
  ::BERTBuffers::_CallResponse_default_instance_.err_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::BERTBuffers::_CallResponse_default_instance_.result_ = const_cast< ::BERTBuffers::Variable*>(
      ::BERTBuffers::Variable::internal_default_instance());
  ::BERTBuffers::_CallResponse_default_instance_.console_ = const_cast< ::BERTBuffers::Console*>(
      ::BERTBuffers::Console::internal_default_instance());
  ::BERTBuffers::_CallResponse_default_instance_.code_ = const_cast< ::BERTBuffers::Code*>(
      ::BERTBuffers::Code::internal_default_instance());
  ::BERTBuffers::_CallResponse_default_instance_.shell_command_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::BERTBuffers::_CallResponse_default_instance_.function_call_ = const_cast< ::BERTBuffers::CompositeFunctionCall*>(
      ::BERTBuffers::CompositeFunctionCall::internal_default_instance());
  ::BERTBuffers::_CallResponse_default_instance_.function_list_ = const_cast< ::BERTBuffers::FunctionList*>(
      ::BERTBuffers::FunctionList::internal_default_instance());
  ::BERTBuffers::_CallResponse_default_instance_.user_command_ = 0u;
}
void CallResponse::set_allocated_result(::BERTBuffers::Variable* result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_operation();
  if (result) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, result, submessage_arena);
    }
    set_has_result();
    operation_.result_ = result;
  }
  // @@protoc_insertion_point(field_set_allocated:BERTBuffers.CallResponse.result)
}
void CallResponse::set_allocated_console(::BERTBuffers::Console* console) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_operation();
  if (console) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      console = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, console, submessage_arena);
    }
    set_has_console();
    operation_.console_ = console;
  }
  // @@protoc_insertion_point(field_set_allocated:BERTBuffers.CallResponse.console)
}
void CallResponse::set_allocated_code(::BERTBuffers::Code* code) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_operation();
  if (code) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      code = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, code, submessage_arena);
    }
    set_has_code();
    operation_.code_ = code;
  }
  // @@protoc_insertion_point(field_set_allocated:BERTBuffers.CallResponse.code)
}
void CallResponse::set_allocated_function_call(::BERTBuffers::CompositeFunctionCall* function_call) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_operation();
  if (function_call) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      function_call = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, function_call, submessage_arena);
    }
    set_has_function_call();
    operation_.function_call_ = function_call;
  }
  // @@protoc_insertion_point(field_set_allocated:BERTBuffers.CallResponse.function_call)
}
void CallResponse::set_allocated_function_list(::BERTBuffers::FunctionList* function_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_operation();
  if (function_list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      function_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, function_list, submessage_arena);
    }
    set_has_function_list();
    operation_.function_list_ = function_list;
  }
  // @@protoc_insertion_point(field_set_allocated:BERTBuffers.CallResponse.function_list)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallResponse::kIdFieldNumber;
const int CallResponse::kWaitFieldNumber;
const int CallResponse::kErrFieldNumber;
const int CallResponse::kResultFieldNumber;
const int CallResponse::kConsoleFieldNumber;
const int CallResponse::kCodeFieldNumber;
const int CallResponse::kShellCommandFieldNumber;
const int CallResponse::kFunctionCallFieldNumber;
const int CallResponse::kFunctionListFieldNumber;
const int CallResponse::kUserCommandFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallResponse::CallResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsCallResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.CallResponse)
}
CallResponse::CallResponse(const CallResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&wait_) -
    reinterpret_cast<char*>(&id_)) + sizeof(wait_));
  clear_has_operation();
  switch (from.operation_case()) {
    case kErr: {
      set_err(from.err());
      break;
    }
    case kResult: {
      mutable_result()->::BERTBuffers::Variable::MergeFrom(from.result());
      break;
    }
    case kConsole: {
      mutable_console()->::BERTBuffers::Console::MergeFrom(from.console());
      break;
    }
    case kCode: {
      mutable_code()->::BERTBuffers::Code::MergeFrom(from.code());
      break;
    }
    case kShellCommand: {
      set_shell_command(from.shell_command());
      break;
    }
    case kFunctionCall: {
      mutable_function_call()->::BERTBuffers::CompositeFunctionCall::MergeFrom(from.function_call());
      break;
    }
    case kFunctionList: {
      mutable_function_list()->::BERTBuffers::FunctionList::MergeFrom(from.function_list());
      break;
    }
    case kUserCommand: {
      set_user_command(from.user_command());
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.CallResponse)
}

void CallResponse::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wait_) -
      reinterpret_cast<char*>(&id_)) + sizeof(wait_));
  clear_has_operation();
  _cached_size_ = 0;
}

CallResponse::~CallResponse() {
  // @@protoc_insertion_point(destructor:BERTBuffers.CallResponse)
  SharedDtor();
}

void CallResponse::SharedDtor() {
  if (has_operation()) {
    clear_operation();
  }
}

void CallResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CallResponse::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CallResponse& CallResponse::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsCallResponse();
  return *internal_default_instance();
}

CallResponse* CallResponse::New(::google::protobuf::Arena* arena) const {
  CallResponse* n = new CallResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CallResponse::clear_operation() {
// @@protoc_insertion_point(one_of_clear_start:BERTBuffers.CallResponse)
  switch (operation_case()) {
    case kErr: {
      operation_.err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kResult: {
      delete operation_.result_;
      break;
    }
    case kConsole: {
      delete operation_.console_;
      break;
    }
    case kCode: {
      delete operation_.code_;
      break;
    }
    case kShellCommand: {
      operation_.shell_command_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kFunctionCall: {
      delete operation_.function_call_;
      break;
    }
    case kFunctionList: {
      delete operation_.function_list_;
      break;
    }
    case kUserCommand: {
      // No need to clear
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OPERATION_NOT_SET;
}


void CallResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.CallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wait_) -
      reinterpret_cast<char*>(&id_)) + sizeof(wait_));
  clear_operation();
  _internal_metadata_.Clear();
}

bool CallResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.CallResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool wait = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &wait_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string err = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->err().data(), static_cast<int>(this->err().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.CallResponse.err"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.Variable result = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.Console console = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_console()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.Code code = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string shell_command = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shell_command()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shell_command().data(), static_cast<int>(this->shell_command().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.CallResponse.shell_command"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.CompositeFunctionCall function_call = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_function_call()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.FunctionList function_list = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_function_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 user_command = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          clear_operation();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &operation_.user_command_)));
          set_has_user_command();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.CallResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.CallResponse)
  return false;
#undef DO_
}

void CallResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.CallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // bool wait = 2;
  if (this->wait() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->wait(), output);
  }

  // string err = 3;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->err().data(), static_cast<int>(this->err().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.CallResponse.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->err(), output);
  }

  // .BERTBuffers.Variable result = 4;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *operation_.result_, output);
  }

  // .BERTBuffers.Console console = 5;
  if (has_console()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *operation_.console_, output);
  }

  // .BERTBuffers.Code code = 6;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *operation_.code_, output);
  }

  // string shell_command = 7;
  if (has_shell_command()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shell_command().data(), static_cast<int>(this->shell_command().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.CallResponse.shell_command");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->shell_command(), output);
  }

  // .BERTBuffers.CompositeFunctionCall function_call = 8;
  if (has_function_call()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *operation_.function_call_, output);
  }

  // .BERTBuffers.FunctionList function_list = 9;
  if (has_function_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *operation_.function_list_, output);
  }

  // uint32 user_command = 10;
  if (has_user_command()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->user_command(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.CallResponse)
}

::google::protobuf::uint8* CallResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.CallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // bool wait = 2;
  if (this->wait() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->wait(), target);
  }

  // string err = 3;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->err().data(), static_cast<int>(this->err().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.CallResponse.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->err(), target);
  }

  // .BERTBuffers.Variable result = 4;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *operation_.result_, deterministic, target);
  }

  // .BERTBuffers.Console console = 5;
  if (has_console()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *operation_.console_, deterministic, target);
  }

  // .BERTBuffers.Code code = 6;
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *operation_.code_, deterministic, target);
  }

  // string shell_command = 7;
  if (has_shell_command()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shell_command().data(), static_cast<int>(this->shell_command().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.CallResponse.shell_command");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->shell_command(), target);
  }

  // .BERTBuffers.CompositeFunctionCall function_call = 8;
  if (has_function_call()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *operation_.function_call_, deterministic, target);
  }

  // .BERTBuffers.FunctionList function_list = 9;
  if (has_function_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *operation_.function_list_, deterministic, target);
  }

  // uint32 user_command = 10;
  if (has_user_command()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->user_command(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.CallResponse)
  return target;
}

size_t CallResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.CallResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // bool wait = 2;
  if (this->wait() != 0) {
    total_size += 1 + 1;
  }

  switch (operation_case()) {
    // string err = 3;
    case kErr: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err());
      break;
    }
    // .BERTBuffers.Variable result = 4;
    case kResult: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *operation_.result_);
      break;
    }
    // .BERTBuffers.Console console = 5;
    case kConsole: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *operation_.console_);
      break;
    }
    // .BERTBuffers.Code code = 6;
    case kCode: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *operation_.code_);
      break;
    }
    // string shell_command = 7;
    case kShellCommand: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->shell_command());
      break;
    }
    // .BERTBuffers.CompositeFunctionCall function_call = 8;
    case kFunctionCall: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *operation_.function_call_);
      break;
    }
    // .BERTBuffers.FunctionList function_list = 9;
    case kFunctionList: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *operation_.function_list_);
      break;
    }
    // uint32 user_command = 10;
    case kUserCommand: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->user_command());
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CallResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.CallResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CallResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CallResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.CallResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.CallResponse)
    MergeFrom(*source);
  }
}

void CallResponse::MergeFrom(const CallResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.CallResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.wait() != 0) {
    set_wait(from.wait());
  }
  switch (from.operation_case()) {
    case kErr: {
      set_err(from.err());
      break;
    }
    case kResult: {
      mutable_result()->::BERTBuffers::Variable::MergeFrom(from.result());
      break;
    }
    case kConsole: {
      mutable_console()->::BERTBuffers::Console::MergeFrom(from.console());
      break;
    }
    case kCode: {
      mutable_code()->::BERTBuffers::Code::MergeFrom(from.code());
      break;
    }
    case kShellCommand: {
      set_shell_command(from.shell_command());
      break;
    }
    case kFunctionCall: {
      mutable_function_call()->::BERTBuffers::CompositeFunctionCall::MergeFrom(from.function_call());
      break;
    }
    case kFunctionList: {
      mutable_function_list()->::BERTBuffers::FunctionList::MergeFrom(from.function_list());
      break;
    }
    case kUserCommand: {
      set_user_command(from.user_command());
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
}

void CallResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.CallResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallResponse::CopyFrom(const CallResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.CallResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallResponse::IsInitialized() const {
  return true;
}

void CallResponse::Swap(CallResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallResponse::InternalSwap(CallResponse* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(wait_, other->wait_);
  swap(operation_, other->operation_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CallResponse::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace BERTBuffers

// @@protoc_insertion_point(global_scope)
